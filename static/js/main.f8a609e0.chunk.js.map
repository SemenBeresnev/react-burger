{"version":3,"sources":["components/burger-constructor-item/burger-constructor-item.module.css","components/profile-orders/profile-orders.module.css","components/modal-overlay/modal-overlay.module.css","pages/feed/feed.module.css","components/burger-constructor/burger-constructor.module.css","components/app-header/app-header.module.css","services/types/types.ts","components/app-header/app-header.tsx","components/ingredient-details/ingredient-details.tsx","components/ingredient/ingredient.tsx","components/burger-ingredients/burger-ingredients.tsx","services/actions/burger-constructor.tsx","utils/constants.tsx","utils/funcs.tsx","utils/api.tsx","services/actions/orders.ts","components/burger-constructor-item/burger-constructor-item.tsx","components/burger-constructor/burger-constructor.tsx","pages/home/home.tsx","services/actions/user.tsx","pages/login/login.tsx","pages/register/register.tsx","hooks/useInput.tsx","components/profile-form/profile-form.tsx","components/profile-menu/profile-menu.tsx","components/feed-item/feed-item.tsx","components/profile-orders/profile-orders.tsx","pages/profile/profile.tsx","pages/reset-password/reset-password.tsx","pages/forgot-password/forgot-password.tsx","pages/not-found/not-found.tsx","hocs/protected-route.tsx","services/actions/burger-ingredients.tsx","components/feed-details/feed-details.tsx","components/modal-overlay/modal-overlay.tsx","components/modal/modal.tsx","images/graphics.png","components/order-details/order-details.tsx","pages/feed/feed.tsx","components/app/app.tsx","services/middlewares/ordersSocketMiddleWare.ts","reportWebVitals.ts","services/reducers/burger-ingredients.ts","services/reducers/burger-constructor.ts","services/reducers/user.tsx","services/reducers/orders.ts","services/reducers/index.ts","services/store.tsx","index.tsx","components/feed-details/feed-details.module.css","components/ingredient-details/ingredient-details.module.css","components/burger-ingredients/burger-ingredients.module.css","components/profile-menu/profile-menu.module.css","components/ingredient/ingredient.module.css","components/modal/modal.module.css","pages/login/login.module.css","pages/register/register.module.css","pages/reset-password/reset-password.module.css","pages/forgot-password/forgot-password.module.css","pages/profile/profile.module.css","components/profile-form/profile-form.module.css","components/order-details/order-details.module.css"],"names":["module","exports","useDispatch","dispatchHook","useSelector","selectorHook","AppHeader","isAuth","state","userData","isConstructor","useRouteMatch","path","exact","isFeed","isProfile","isLogin","isIngredient","className","appHeaderStyles","body__container","appbar","container__buttons","container__button","to","activeClassName","nav__linkActive","nav__link","type","profile","IngredientDetails","burgerIngredients","ingredients","ingredientDetails","id","useParams","ingredient","find","item","_id","key","ingredientDetailsIsEmpty","ingredientDetailsStyle","title","container","src","image_large","alt","name","flex","calories","proteins","fat","carbohydrates","Ingredient","props","counter","burgerConstructor","bun","image","price","ingredientsCount","filter","length","location","useLocation","useDrag","collect","monitor","opacity","isDragging","ref","pathname","background","draggable","ingredientStyle","product","style","count","Number","BurgerIngredients","ingredientsRequest","ingredientsError","React","useState","current","setCurrent","bunsRef","createRef","saucesRef","mainsRef","scrollContRef","handleTabClick","value","ingredientsStyles","constr","display","href","active","onClick","products","onScroll","e","scrollContainer","saucesContainer","getBoundingClientRect","mainsContainer","offsetTop","top","products__cont","map","ADD_INGREDIENT_TO_CONSTRUCTOR","REMOVE_INGREDIENT_FROM_CONSTRUCTOR","ADD_BUN_TO_CONSTRUCTOR","MOVE_INGREDIENT_IN_CONSTRUCTOR","CLEAR_CONSTRUCTOR","apiURL","wsURL","getCookie","matches","document","cookie","match","RegExp","replace","decodeURIComponent","undefined","setCookie","exp","expires","d","Date","setTime","getTime","toUTCString","updatedCookie","encodeURIComponent","propName","propValue","deleteCookie","getDate","date","formatRelative","locale","ru","refreshToken","fetch","method","headers","body","JSON","stringify","token","localStorage","getItem","then","checkResponse","res","ok","json","err","Promise","reject","fetchWithRefresh","url","a","options","message","refreshData","setItem","accessToken","authorization","patchUser","form","user","getUser","postOrderUser","ids","ORDER_WS_CONNECTION_SUCCESS","ORDER_WS_CONNECTION_ERROR","ORDER_WS_CONNECTION_CLOSED","ORDER_WS_GET_MESSAGE","ORDER_WS_CONNECTION_START","GET_ORDER_REQUEST","GET_ORDER_SUCCESS","GET_ORDER_FAILED","GET_ORDER_NUMBER_REQUEST","GET_ORDER_NUMBER_SUCCESS","GET_ORDER_NUMBER_FAILED","CLEAR_ORDER_NUMBER","CLEAR_ORDER","orderWsConnectionStart","payload","orderWsConnectionClosed","BurgerConstructorIngredient","uuid","index","dispatch","useRef","drag","useDrop","accept","hover","dragIndex","hoverIndex","hoverBoundingRect","hoverMiddleY","bottom","hoverClientY","getClientOffset","y","moveCardHandler","drop","constructorStyle","cursor","text","thumbnail","handleClose","BurgerConstructor","orderNumber","orderData","history","useHistory","isHover","isOver","uuidv4","dropTarget","totalPrice","useMemo","reduce","acc","constructor","list","item_isHovering","isLocked","nobun_top","list_scroll","flexDirection","gap","alignItems","idx","nobun_bottom","order","total__price","size","alert","push","idsArr","success","number","catch","console","log","postOrder","Home","GET_USER_REQUEST","GET_USER_SUCCESS","GET_USER_FAILED","GET_USER_INFO","SET_IS_AUTH","DELETE_IS_AUTH","CHANGE_USER_INFO","SET_WAS_ON_FORGOT_PAGE","DELETE_WAS_ON_FORGOT_PAGE","Login","email","password","setForm","from","handleChange","target","styles","login__container","onSubmit","preventDefault","sendLogin","placeholder","error","errorText","onChange","form__button","login__links","Register","action","sendRegister","useCustomInput","handleBlur","input","setAttribute","classList","add","handleIconClick","removeAttribute","remove","focus","ProfileForm","isChangeInput","setIsChangeInput","useEffect","nameCustomInput","passCustomInput","handleOnChange","sendUserInfo","icon","onBlur","onIconClick","disabled","form__buttons","ProfileMenu","profile__cont","profile__menu","profile__menuItem","sendLogout","profile__menuSubtitle","FeedItem","data","orderIngredients","Array","Set","curr","feedStyles","feed","feed__top","createdAt","feed__bottom","position","slice","image_mobile","zIndex","more","ProfileOrders","orders","wsConnected","profileOrdersStyle","profile__orders","Profile","profile__container","profile__content","ResetPassword","wasOnForgotPass","resetStyles","sendResetPassword","ForgotPassword","setEmail","emailValue","sendForgotPassword","NotFound","ProtectedRoute","children","render","GET_INGREDIENTS_REQUEST","GET_INGREDIENTS_SUCCESS","GET_INGREDIENTS_FAILED","SET_INGREDIENT_TO_MODAL","REMOVE_INGREDIENT_FROM_MODAL","FeedDetails","orderId","Error","status","feedDetailsStyle","ingredient__info","ingredient__image","ingredient__price","feed__footer","ModalOverlay","modalOverlayStyles","overlay","onClose","Modal","handleCatchEsc","code","stopPropagation","goBack","back","addEventListener","removeEventListener","ReactDOM","createPortal","modalStyles","modal","header","close_pointer","getElementById","OrderDetails","orderDetailsStyles","checkImage","Feed","total","totalToday","textAlign","feeds__container","feeds","feed__info","feed__board","feed__boardLeft","feed__completed","feed__boardRight","feed__inProgress","feed__mainTitle","App","wsActions","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","authRequest","authFailed","Boolean","wsError","orderRequest","orderFailed","orderNumberRequest","orderNumberFailed","rootReducer","combineReducers","dragCard","splice","removeItem","orderMiddleWare","wsInit","onOpen","onError","onMessage","store","socket","next","WebSocket","onopen","event","onerror","onmessage","parsedData","parse","restParsedData","onclose","configureStore","reducer","middleware","getDefaultMiddleware","concat","StrictMode","DndProvider","backend","HTML5Backend"],"mappings":"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","file":"static/js/main.f8a609e0.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"burger-constructor-item_item__2i1_7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile__orders\":\"profile-orders_profile__orders__15QWL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"modal-overlay_overlay__3mbJe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feeds__container\":\"feed_feeds__container__3p_Zb\",\"feeds\":\"feed_feeds__14gW4\",\"ingredients\":\"feed_ingredients__ezg5S\",\"ingredient\":\"feed_ingredient__A5jtd\",\"feed\":\"feed_feed__2WUb3\",\"feed__top\":\"feed_feed__top__2WwWa\",\"feed__bottom\":\"feed_feed__bottom__3p01i\",\"feed__info\":\"feed_feed__info__1a3RJ\",\"feed__board\":\"feed_feed__board__2MiYx\",\"feed__boardLeft\":\"feed_feed__boardLeft__2T64x\",\"feed__boardRight\":\"feed_feed__boardRight__146VF\",\"feed__completed\":\"feed_feed__completed__25Jw-\",\"feed__inProgress\":\"feed_feed__inProgress__23NGt\",\"feed__mainTitle\":\"feed_feed__mainTitle__1tm_V\",\"more\":\"feed_more__zKuq5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"constructor\":\"burger-constructor_constructor__3obDF\",\"list\":\"burger-constructor_list__1C9SA\",\"item\":\"burger-constructor_item__S9iYJ\",\"list_scroll\":\"burger-constructor_list_scroll__3rsie burger-constructor_list__1C9SA\",\"order\":\"burger-constructor_order__16Uwk\",\"total_amount\":\"burger-constructor_total_amount__3eEuX\",\"nobun\":\"burger-constructor_nobun__2GfBo\",\"nobun_top\":\"burger-constructor_nobun_top__3m2ro burger-constructor_nobun__2GfBo\",\"nobun_bottom\":\"burger-constructor_nobun_bottom__1SBSN burger-constructor_nobun__2GfBo\",\"item_isHovering\":\"burger-constructor_item_isHovering__3il4z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body--container\":\"app-header_body--container__1Rea5\",\"appbar\":\"app-header_appbar__1AJUG\",\"container__button\":\"app-header_container__button__1mqBU\",\"title__button\":\"app-header_title__button__2tmHI\",\"icons\":\"app-header_icons__3CFCP\",\"container__buttons\":\"app-header_container__buttons__1h3vS\",\"nav\":\"app-header_nav___XYFe\",\"nav__menu\":\"app-header_nav__menu__3oPM5\",\"nav__item\":\"app-header_nav__item__2-P7B\",\"nav__link\":\"app-header_nav__link__6ajx1\",\"nav__linkActive\":\"app-header_nav__linkActive__3ALdQ\",\"profile\":\"app-header_profile__3yz-4\"};","import { Location } from 'history';\r\nimport store from \"../store\";\r\nimport { ThunkAction } from 'redux-thunk';\r\nimport { TUserActions } from \"./user\";\r\nimport { TBurgerIngredientsActions } from \"./burger-ingerdients\";\r\nimport { TConstructorActions } from \"./burger-constructor\";\r\nimport {\r\n    TypedUseSelectorHook,\r\n    useDispatch as dispatchHook,\r\n    useSelector as selectorHook\r\n} from 'react-redux';\r\nimport { TOrdersActions } from \"./orders\";\r\nimport { rootReducer } from \"../reducers\";\r\n\r\n\r\nexport type TIngredient = {\r\n    calories: number;\r\n    carbohydrates: number;\r\n    fat: number;\r\n    image: string;\r\n    image_large: string;\r\n    image_mobile: string;\r\n    name: string;\r\n    price: number;\r\n    proteins: number;\r\n    type: string;\r\n    __v?: number;\r\n    _id: string;\r\n    index: number;\r\n}\r\n\r\n\r\nexport type TLocationState = {\r\n    background?: Location;\r\n    state?: Location;\r\n    location: Location;\r\n}\r\n\r\nexport type TConstructorIngredient = TIngredient & {\r\n    onOpen: () => {},\r\n    uuid: string;\r\n}\r\n\r\nexport type TConstructorItemIngredient = TIngredient & {\r\n    uuid: string;\r\n}\r\n\r\nexport type TMoveCards = {\r\n    dragIndex: number,\r\n    hoverIndex: number\r\n}\r\n\r\nexport type TIngredientDetailParams = {\r\n    id: string\r\n}\r\n\r\nexport type TFormData = {\r\n    name: string,\r\n    email: string,\r\n    password: string\r\n}\r\n\r\nexport type TResetPasswordForm = Pick<TFormData, 'password'> & {\r\n    token: string\r\n}\r\n\r\nexport type TLoginForm = Omit<TFormData, 'name'>\r\n\r\nexport type TUser = {\r\n    email: string;\r\n    name: string;\r\n}\r\n\r\ntype TApplicationActions = TUserActions | TBurgerIngredientsActions | TConstructorActions | TOrdersActions;\r\nexport type AppThunk<ReturnType = void> = ThunkAction<\r\n    ReturnType,\r\n    RootState,\r\n    unknown,\r\n    TApplicationActions\r\n>\r\n\r\nexport type AppDispatch = <TReturnType>(action: TApplicationActions | AppThunk | undefined) => TReturnType;\r\nexport const useDispatch = () => dispatchHook<AppDispatch>();\r\n\r\nexport const useSelector: TypedUseSelectorHook<RootState> = selectorHook;\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\n","import React from 'react';\r\nimport {NavLink, useRouteMatch, Link} from \"react-router-dom\";\r\nimport { useSelector } from '../../services/types/types';\r\nimport { Logo } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { BurgerIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { ProfileIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { ListIcon } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport appHeaderStyles from './app-header.module.css';\r\n\r\nfunction AppHeader() {\r\n  const {isAuth} = useSelector(state => state.userData);\r\n  //const isAuth = false;\r\n  const isConstructor = !!useRouteMatch({ path: '/', exact: true});\r\n  const isFeed = !!useRouteMatch('/feed');\r\n  const isProfile = !!useRouteMatch('/profile');\r\n  const isLogin = !!useRouteMatch('/login');\r\n  const isIngredient = !!useRouteMatch({path: '/ingredients/:id'})\r\n  return (\r\n    <div className={appHeaderStyles.body__container}>\r\n      <div className={appHeaderStyles.appbar}>\r\n        <div className={appHeaderStyles.container__buttons}>\r\n          <div className={appHeaderStyles.container__button}>\r\n            <NavLink exact={true} to={\"/\"} activeClassName={appHeaderStyles.nav__linkActive}  \r\n                className={`${appHeaderStyles.nav__link} ${isIngredient && appHeaderStyles.nav__linkActive} text text_type_main-default`}>\r\n              <BurgerIcon type={(isConstructor || isIngredient) ? \"primary\" : \"secondary\"} /><p>Конструктор</p>\r\n            </NavLink>\r\n          </div>\r\n          <div className={appHeaderStyles.container__button}>\r\n            <NavLink to={\"/feed\"} activeClassName={appHeaderStyles.nav__linkActive}  className={`${appHeaderStyles.nav__link} text text_type_main-default`}>\r\n              <ListIcon type={isFeed ? \"primary\" : \"secondary\"} /><p>Лента заказов</p>\r\n            </NavLink>\r\n          </div>\r\n        </div>\r\n        <Link to=\"/\">\r\n          <Logo />\r\n        </Link>\r\n        <div className={appHeaderStyles.container__button}>\r\n          {isAuth ? (\r\n            <NavLink to={\"/profile\"} activeClassName={appHeaderStyles.nav__linkActive} className={`${appHeaderStyles.profile} text text_type_main-default pl-4 pr-4 pt-2 pb-2`}>\r\n              <ProfileIcon type={isProfile ? \"primary\" : \"secondary\"} /><span>Личный кабинет (уже есть)</span>\r\n            </NavLink>\r\n          ) : (\r\n            <NavLink to={\"/login\"} activeClassName={appHeaderStyles.nav__linkActive} className={`${appHeaderStyles.profile} text text_type_main-default pl-4 pr-4 pt-2 pb-2`}>\r\n              <ProfileIcon type={isLogin ? \"primary\" : \"secondary\"} /><span>Личный кабинет (создать)</span>\r\n            </NavLink>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AppHeader;\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useParams } from \"react-router-dom\";\r\nimport ingredientDetailsStyle from './ingredient-details.module.css';\r\n//import dataPropTypes from \"../../utils/prop-types\";\r\nimport { getIngredients } from \"../../services/actions/burger-ingredients\";\r\nimport { TIngredient, TIngredientDetailParams } from \"../../utils/types\";\r\nimport { useDispatch, useSelector } from '../../services/types/types';\r\n\r\ntype TIngredientDetail = {\r\n    [key: string]: any\r\n} | undefined\r\n\r\nfunction IngredientDetails() {\r\n    const dispatch = useDispatch();\r\n    const { ingredients, ingredientDetails } = useSelector(state => state.burgerIngredients);\r\n    const { id } = useParams<TIngredientDetailParams>();\r\n    const ingredient: TIngredientDetail = ingredients.find((item) => item._id === id);\r\n\r\n    function ingredientDetailsIsEmpty() {\r\n        for (var key in ingredientDetails) { return false; }\r\n        return true;\r\n    }\r\n\r\n\r\n    /*if (!ingredientDetailsIsEmpty()) {ingredient = ingredientDetails;\r\n    } else {ingredient = ingredients.find((item) => item._id === id); };\r\n  */\r\n    return (\r\n        <>\r\n            {ingredientDetailsIsEmpty() && (\r\n                <h1 className={`${ingredientDetailsStyle.title}  mt-30 text text_color_primary text_type_main-large`}>Детали ингредиента</h1>\r\n            )}\r\n            {ingredient && (\r\n                <div className={ingredientDetailsStyle.container}>\r\n                    <img src={ingredient?.image_large} alt=\"\" />\r\n                    <h5 className=\"text text_type_main-medium mt-4\">{ingredient?.name}</h5>\r\n                    <div className={`${ingredientDetailsStyle.flex} mt-8`}>\r\n                        <div className={`${ingredientDetailsStyle.item} mr-5`}>\r\n                            <span className=\"text text_color_inactive text_type_main-default\">Калории,ккал</span>\r\n                            <span\r\n                                className=\"text text_color_inactive text_type_digits-default mt-2\">{ingredient?.calories}</span>\r\n                        </div>\r\n                        <div className={`${ingredientDetailsStyle.item} mr-5`}>\r\n                            <span className=\"text text_color_inactive text_type_main-default\">Белки, г</span>\r\n                            <span\r\n                                className=\"text text_color_inactive text_type_digits-default mt-2\">{ingredient?.proteins}</span>\r\n                        </div>\r\n                        <div className={`${ingredientDetailsStyle.item} mr-5`}>\r\n                            <span className=\"text text_color_inactive text_type_main-default\">Жиры, г</span>\r\n                            <span\r\n                                className=\"text text_color_inactive text_type_digits-default mt-2\">{ingredient?.fat}</span>\r\n                        </div>\r\n                        <div className={`${ingredientDetailsStyle.item} mr-5`}>\r\n                            <span className=\"text text_color_inactive text_type_main-default\">Углеводы, г</span>\r\n                            <span\r\n                                className=\"text text_color_inactive text_type_digits-default mt-2\">{ingredient?.carbohydrates}</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\n//IngredientDetails.propTypes = {data: dataPropTypes.isRequired};\r\n\r\nexport default IngredientDetails;","import React, { SyntheticEvent } from 'react';\r\nimport { Link, useLocation } from \"react-router-dom\";\r\nimport ingredientStyle from './ingredient.module.css';\r\nimport { Counter, CurrencyIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport PropTypes from 'prop-types';\r\nimport { useDrag } from \"react-dnd\";\r\nimport { TIngredient } from \"../../utils/types\";\r\nimport { useSelector } from '../../services/types/types';\r\n\r\ntype TIngredientProps = {\r\n    image: string;\r\n    price: number;\r\n    name: string;\r\n    _id: string;\r\n    type: string;\r\n}\r\n\r\nconst Ingredient: React.FC<TIngredientProps> = (props) => {\r\n    const { ingredients, bun } = useSelector(state => state.burgerConstructor);\r\n    const { image, price, name, _id, type } = props;\r\n    let ingredientsCount = ingredients.filter((item) => item._id === _id).length;\r\n    let counter;\r\n    const location = useLocation();\r\n\r\n    if (type === 'bun' && bun && bun._id === _id) {\r\n        counter = 2;\r\n    } else if (type !== 'bun' && ingredientsCount) {\r\n        counter = ingredientsCount\r\n    } else {\r\n        counter = '';\r\n    }\r\n\r\n    const [{ opacity }, ref] = useDrag({\r\n        type: 'ingredients',\r\n        item: { ...props },\r\n        collect: monitor => ({\r\n            opacity: monitor.isDragging() ? 0.5 : 1\r\n        })\r\n    })\r\n\r\n    return (\r\n        <Link\r\n            to={{ pathname: `/ingredients/${_id}`, state: { background: location } }}\r\n            ref={ref}\r\n            draggable\r\n            className={`${ingredientStyle.product}`}\r\n            style={{ opacity: opacity }}\r\n            id={_id} >\r\n            {counter && <Counter count={Number(counter)} />}\r\n            <img className={`${ingredientStyle.image} pr-4 pl-4`} src={image} alt=\"\" />\r\n            <div className={`${ingredientStyle.price} mt-1 mb-1`}>\r\n                <span className='text text_type_digits-default mr-2'>{price}</span>\r\n                <CurrencyIcon type=\"primary\" />\r\n            </div>\r\n            <p className={`${ingredientStyle.name} text text_type_main-default mt-1 mb-10`}>{name}</p>\r\n        </Link>\r\n    )\r\n}\r\n\r\n/*\r\nIngredient.propTypes = {\r\n    image: PropTypes.string.isRequired,\r\n    price: PropTypes.number.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    _id: PropTypes.string.isRequired,\r\n    onOpen: PropTypes.func.isRequired,\r\n    type: PropTypes.string.isRequired\r\n}*/\r\nexport default Ingredient;","import React, { createRef, useEffect, SyntheticEvent } from 'react';\r\nimport ingredientsStyles from './burger-ingredients.module.css';\r\nimport Ingredient from \"../ingredient/ingredient\";\r\nimport { Tab } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport Modal from \"../modal/modal\";\r\nimport IngredientDetails from \"../ingredient-details/ingredient-details\";\r\nimport {\r\n    getIngredients,\r\n    REMOVE_INGREDIENT_FROM_MODAL,\r\n    SET_INGREDIENT_TO_MODAL\r\n} from \"../../services/actions/burger-ingredients\";\r\nimport { TIngredient } from \"../../utils/types\";\r\nimport { useDispatch, useSelector } from '../../services/types/types';\r\n\r\nfunction BurgerIngredients() {\r\n    const { ingredients, ingredientsRequest, ingredientsError } = useSelector(state => state.burgerIngredients)\r\n    const [current, setCurrent] = React.useState<string>('buns');\r\n    const [modalIsOpen, setModalIsOpen] = React.useState<boolean>(false);\r\n    const bunsRef = createRef<HTMLDivElement>();\r\n    const saucesRef = createRef<HTMLDivElement>();\r\n    const mainsRef = createRef<HTMLDivElement>();\r\n    const dispatch = useDispatch();\r\n    const scrollContRef = createRef<HTMLDivElement>();\r\n\r\n    /*\r\n    const handleOpenModal = (e: SyntheticEvent) => {\r\n        const id = e.currentTarget.getAttribute('id');\r\n        dispatch({\r\n            type: SET_INGREDIENT_TO_MODAL,\r\n            item: ingredients.find((item) => item._id === id)\r\n        })\r\n        setModalIsOpen(true);\r\n    }\r\n    const handleCloseModal = () => {\r\n        setModalIsOpen(false);\r\n        dispatch({\r\n            type: REMOVE_INGREDIENT_FROM_MODAL\r\n        })\r\n    }\r\n    */\r\n    const handleTabClick = (value: string) => {\r\n        setCurrent(value);\r\n    }\r\n\r\n    const handleScroll = (e: SyntheticEvent) => {\r\n        const scrollContainer = scrollContRef.current;\r\n        const saucesContainer = saucesRef.current?.getBoundingClientRect();\r\n        const mainsContainer = mainsRef.current?.getBoundingClientRect();\r\n        // console.log(`buns: ${scrollContainer.offsetTop - bunsContainer.top}, sauces: ${scrollContainer.offsetTop - saucesContainer.top}, mains: ${scrollContainer.offsetTop - mainsContainer.top}`)\r\n        if (scrollContainer !== null && saucesContainer && mainsContainer) {\r\n            if (scrollContainer.offsetTop - saucesContainer.top < 0) {\r\n                setCurrent('buns');\r\n            } else if (scrollContainer.offsetTop - mainsContainer.top < 0) {\r\n                setCurrent('sauces');\r\n            } else {\r\n                setCurrent('mains');\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {ingredientsRequest && !ingredientsError && (\r\n                <h1>Идет загрузка...</h1>\r\n            )}\r\n            {ingredientsError && !ingredientsRequest && (\r\n                <h1>Произошла ошибка попробуйте позже</h1>\r\n            )}\r\n            {!ingredientsError && !ingredientsRequest && ingredients.length > 0 && (\r\n                <div className={ingredientsStyles.constr}>\r\n                    <h1 className=\"text text_type_main-large mt-10\">Соберите бургер</h1>\r\n                    <div style={{ display: 'flex' }} className='mt-5'>\r\n                        <a href=\"#buns\">\r\n                            <Tab value=\"buns\" active={current === 'buns'} onClick={handleTabClick}>\r\n                                Булка\r\n                            </Tab>\r\n                        </a>\r\n                        <a href=\"#sauces\">\r\n                            <Tab value=\"sauces\" active={current === 'sauces'} onClick={handleTabClick}>\r\n                                Соусы\r\n                            </Tab>\r\n                        </a>\r\n                        <a href=\"#mains\">\r\n                            <Tab value=\"mains\" active={current === 'mains'} onClick={handleTabClick}>\r\n                                Начинки\r\n                            </Tab>\r\n                        </a>\r\n                    </div>\r\n                    <div className={`${ingredientsStyles.ingredients} mt-10`}>\r\n                        <div className={ingredientsStyles.products} onScroll={handleScroll} ref={scrollContRef}>\r\n                            <h3 className=\"text text_type_main-medium\" ref={bunsRef} id=\"buns\">Булки</h3>\r\n                            <div className={ingredientsStyles.products__cont}>\r\n                                {ingredients.filter((item) => item.type === 'bun').map((item) => <Ingredient\r\n                                    {...item} key={item._id} />)}\r\n                            </div>\r\n                            <h3 className=\"text text_type_main-medium\" ref={saucesRef} id=\"sauces\">Соусы</h3>\r\n                            <div className={ingredientsStyles.products__cont}>\r\n                                {ingredients.filter((item) => item.type === 'sauce').map((item) => <Ingredient\r\n                                    {...item} key={item._id} />)}\r\n                            </div>\r\n                            <h3 className=\"text text_type_main-medium\" ref={mainsRef} id=\"mains\">Начинки</h3>\r\n                            <div className={ingredientsStyles.products__cont}>\r\n                                {ingredients.filter((item) => item.type === 'main').map((item) => <Ingredient\r\n                                    {...item} key={item._id} />)}\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n            }\r\n        </>\r\n    );\r\n\r\n}\r\n\r\nexport default BurgerIngredients;\r\n","export const ADD_INGREDIENT_TO_CONSTRUCTOR = 'ADD_INGREDIENT_TO_CONSTRUCTOR';\r\nexport const REMOVE_INGREDIENT_FROM_CONSTRUCTOR = 'REMOVE_INGREDIENT_FROM_CONSTRUCTOR';\r\nexport const ADD_BUN_TO_CONSTRUCTOR = 'ADD_BUN_TO_CONSTRUCTOR';\r\nexport const MOVE_INGREDIENT_IN_CONSTRUCTOR = 'MOVE_INGREDIENT_IN_CONSTRUCTOR';\r\nexport const CLEAR_CONSTRUCTOR = 'CLEAR_CONSTRUCTOR';\r\n\r\n\r\n","\r\nconst apiURL: string = 'https://norma.nomoreparties.space/api';\r\nconst wsURL: string = 'wss://norma.nomoreparties.space/orders';\r\n\r\nexport { apiURL, wsURL }\r\n","import { formatRelative } from 'date-fns'\r\nimport { ru } from \"date-fns/locale\";\r\n\r\ntype TSetCookieProps = {\r\n    expires?: number | Date | string;\r\n    path?: string;\r\n}\r\n\r\nexport function getCookie(name: string) {\r\n    const matches = document.cookie.match(\r\n        new RegExp('(?:^|; )' + name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + '=([^;]*)')\r\n    );\r\n    return matches ? decodeURIComponent(matches[1]) : undefined;\r\n}\r\n\r\nexport function setCookie(name: string, value: string, props: TSetCookieProps = {}) {\r\n    props = {\r\n        path: '/',\r\n        ...props\r\n    };\r\n    let exp = props.expires;\r\n    if (typeof exp == 'number' && exp) {\r\n        const d = new Date();\r\n        d.setTime(d.getTime() + exp * 1000);\r\n        exp = props.expires = d;\r\n    }\r\n    if (exp && exp instanceof Date) {\r\n        props.expires = exp.toUTCString();\r\n    }\r\n    value = encodeURIComponent(value);\r\n    let updatedCookie = name + '=' + value;\r\n    for (const propName in props) {\r\n        updatedCookie += '; ' + propName;\r\n        const propValue = (props as { [key: string]: string | boolean })[propName];\r\n        if (propValue !== true) {\r\n            updatedCookie += '=' + propValue;\r\n        }\r\n    }\r\n    document.cookie = updatedCookie;\r\n}\r\n\r\nexport function deleteCookie(name: string) {\r\n    setCookie(name, '', {expires: -1});\r\n}\r\n\r\nexport function getDate(date: string | undefined): string | null {\r\n    if (!date) return null;\r\n    return formatRelative(new Date(date), new Date(), { locale: ru })\r\n}\r\n","import { getCookie, setCookie } from \"./funcs\";\r\nimport { apiURL } from \"./constants\";\r\nimport { TForm } from \"./types\";\r\n\r\nexport const refreshToken = () => {\r\n    return fetch(`${apiURL}/auth/token`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            \"Content-Type\": \"application/json;charset=utf-8\",\r\n        },\r\n        body: JSON.stringify({\r\n            token: localStorage.getItem(\"refreshToken\"),\r\n        }),\r\n    }).then(checkResponse);\r\n};\r\n\r\nexport const checkResponse = (res: Response) => {\r\n    return res.ok ? res.json() : res.json().then((err) => Promise.reject(err));\r\n};\r\n\r\nexport const fetchWithRefresh = async (url: string, options: RequestInit = {}) => {\r\n    try {\r\n        const res = await fetch(url, options);\r\n        return await checkResponse(res);\r\n    } catch (err: any) {\r\n        if (err.message === \"jwt expired\") {\r\n            const refreshData = await refreshToken();\r\n            localStorage.setItem(\"refreshToken\", refreshData.refreshToken);\r\n            setCookie(\"token\", refreshData.accessToken);\r\n            (options.headers as { [key: string]: string }).authorization = refreshData.accessToken;\r\n            const res = await fetch(url, options);\r\n            return await checkResponse(res);\r\n        } else {\r\n            return Promise.reject(err);\r\n        }\r\n    }\r\n};\r\n\r\nexport const patchUser = async (form: TForm) => {\r\n    const token = getCookie('token')\r\n    if (!token) {\r\n        return { user: null };\r\n    }\r\n    return await fetchWithRefresh(`${apiURL}/auth/user`, {\r\n        method: \"PATCH\",\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'authorization': token\r\n        },\r\n        body: JSON.stringify(form)\r\n    })\r\n}\r\n\r\nexport const getUser = async () => {\r\n    const token = getCookie('token')\r\n    if (!token) {\r\n        return { user: null };\r\n    }\r\n\r\n    return await fetchWithRefresh(`${apiURL}/auth/user`, {\r\n        method: \"GET\",\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'authorization': token\r\n        }\r\n    })\r\n}\r\n\r\nexport const postOrderUser = async (ids: Array<string>) => {\r\n    const token = getCookie('token')\r\n    if (!token) {\r\n        return { user: null };\r\n    }\r\n\r\n    return await fetchWithRefresh(`${apiURL}/orders`, {\r\n        method: \"POST\",\r\n        headers: {\r\n            'Content-Type': 'application/json',\r\n            'authorization': token\r\n        },\r\n        body: JSON.stringify({ ingredients: ids })\r\n    })\r\n}\r\n","import { AppDispatch, AppThunk } from \"../types/types\";\r\nimport { apiURL } from \"../../utils/constants\";\r\nimport { Dispatch } from \"react\";\r\nimport { getCookie } from \"../../utils/funcs\";\r\nimport { postOrderUser } from \"../../utils/api\";\r\n\r\nexport const ORDER_WS_CONNECTION_SUCCESS: 'ORDER_WS_CONNECTION_SUCCESS' = 'ORDER_WS_CONNECTION_SUCCESS';\r\nexport const ORDER_WS_CONNECTION_ERROR: 'ORDER_WS_CONNECTION_ERROR' = 'ORDER_WS_CONNECTION_ERROR';\r\nexport const ORDER_WS_CONNECTION_CLOSED: 'ORDER_WS_CONNECTION_CLOSED' = 'ORDER_WS_CONNECTION_CLOSED';\r\nexport const ORDER_WS_GET_MESSAGE: 'ORDER_WS_GET_MESSAGE' = 'ORDER_WS_GET_MESSAGE';\r\nexport const ORDER_WS_CONNECTION_START: 'ORDER_WS_CONNECTION_START' = 'ORDER_WS_CONNECTION_START';\r\nexport const GET_ORDER_REQUEST: 'GET_ORDER_REQUEST' = 'GET_ORDER_REQUEST';\r\nexport const GET_ORDER_SUCCESS: 'GET_ORDER_SUCCESS' = 'GET_ORDER_SUCCESS';\r\nexport const GET_ORDER_FAILED: 'GET_ORDER_FAILED' = 'GET_ORDER_FAILED';\r\nexport const GET_ORDER_NUMBER_REQUEST: 'GET_ORDER_NUMBER_REQUEST' = 'GET_ORDER_NUMBER_REQUEST';\r\nexport const GET_ORDER_NUMBER_SUCCESS: 'GET_ORDER_NUMBER_SUCCESS' = 'GET_ORDER_NUMBER_SUCCESS';\r\nexport const GET_ORDER_NUMBER_FAILED: 'GET_ORDER_NUMBER_FAILED' = 'GET_ORDER_NUMBER_FAILED';\r\nexport const CLEAR_ORDER_NUMBER: 'CLEAR_ORDER_NUMBER' = 'CLEAR_ORDER_NUMBER';\r\nexport const CLEAR_ORDER: 'CLEAR_ORDER' = 'CLEAR_ORDER';\r\n\r\nexport const orderWsConnectionStart = (url: string) => {\r\n  return {\r\n    type: ORDER_WS_CONNECTION_START,\r\n    payload: url\r\n  }\r\n}\r\n\r\nexport const orderWsConnectionSuccess = () => {\r\n  return {\r\n    type: ORDER_WS_CONNECTION_SUCCESS,\r\n  }\r\n}\r\n\r\nexport const orderWsConnectionError = () => {\r\n  return {\r\n    type: ORDER_WS_CONNECTION_ERROR,\r\n    wsError: true\r\n  }\r\n}\r\n\r\nexport const orderWsConnectionClosed = () => {\r\n  return {\r\n    type: ORDER_WS_CONNECTION_CLOSED\r\n  }\r\n}\r\n\r\nexport const orderWsGetMessage = (message: any) => {\r\n  return {\r\n    type: ORDER_WS_GET_MESSAGE,\r\n    payload: message\r\n  }\r\n}\r\n\r\nexport const getOrder = (orderId: string): AppThunk => {\r\n  return function (dispatch: AppDispatch) {\r\n    dispatch({\r\n      type: GET_ORDER_REQUEST\r\n    })\r\n    fetch(`${apiURL}/orders/${orderId}`)\r\n      .then(res => {\r\n        if (res.ok) {\r\n          return res.json();\r\n        }\r\n        throw new Error(`Cannot get data from API. Status code: ${res.status}`);\r\n      })\r\n      .then(data => {\r\n        if (data && data.success) {\r\n          dispatch({\r\n            type: GET_ORDER_SUCCESS,\r\n            orders: data.orders,\r\n          })\r\n        } else {\r\n          dispatch({ type: GET_ORDER_FAILED })\r\n        }\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n        dispatch({ type: GET_ORDER_FAILED })\r\n      })\r\n  }\r\n}\r\n\r\nexport const postOrder = (idsArr: string[]): AppThunk => {\r\n  const accessToken = getCookie('token');\r\n  return async function (dispatch: AppDispatch) {\r\n    dispatch({\r\n      type: GET_ORDER_NUMBER_REQUEST\r\n    })\r\n    await postOrderUser(idsArr)\r\n      .then(res => {\r\n        if (res && res.success) {\r\n          dispatch({\r\n            type: GET_ORDER_NUMBER_SUCCESS,\r\n            payload: res.order.number\r\n          })\r\n        } else {\r\n          dispatch({\r\n            type: GET_ORDER_NUMBER_FAILED\r\n          })\r\n        }\r\n      }\r\n      )\r\n      .catch(err => {\r\n        console.log(err)\r\n        dispatch({\r\n          type: GET_ORDER_NUMBER_FAILED\r\n        })\r\n        dispatch({\r\n          type: CLEAR_ORDER\r\n        })\r\n      })\r\n  }\r\n}\r\n\r\n\r\nexport type TOrdersThunkActions = ReturnType<typeof postOrder> | ReturnType<typeof getOrder>","import React, {useRef} from 'react';\r\nimport {ConstructorElement, DragIcon} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport PropTypes from 'prop-types';\r\nimport constructorStyle from \"./burger-constructor-item.module.css\"; \r\nimport {useDispatch} from \"react-redux\";\r\nimport {\r\n    MOVE_INGREDIENT_IN_CONSTRUCTOR,\r\n    REMOVE_INGREDIENT_FROM_CONSTRUCTOR\r\n} from \"../../services/actions/burger-constructor\";\r\nimport {useDrag, useDrop} from \"react-dnd\";\r\nimport {TConstructorItemIngredient, TIngredient} from \"../../utils/types\";\r\n\r\nconst BurgerConstructorIngredient: React.FC<TConstructorItemIngredient> = (props) => {\r\n    const {_id, name, price, image, uuid, index} = props;\r\n    const dispatch = useDispatch();\r\n    const handleRemoveIngredient = () => {\r\n        dispatch({\r\n            type: REMOVE_INGREDIENT_FROM_CONSTRUCTOR,\r\n            id: uuid\r\n        })\r\n    }\r\n\r\n    const ref = useRef<HTMLLIElement>(null);\r\n\r\n    const moveCardHandler = (dragIndex: number, hoverIndex: number) => {\r\n        dispatch({\r\n            type: MOVE_INGREDIENT_IN_CONSTRUCTOR,\r\n            dragIndex,\r\n            hoverIndex\r\n        })\r\n    }\r\n\r\n    const [{ isDragging }, drag] = useDrag({\r\n        type: 'sortable',\r\n        item: () => {\r\n            return { ...props, index };\r\n        },\r\n        collect: (monitor) => ({\r\n            isDragging: monitor.isDragging(),\r\n        }),\r\n    });\r\n    const opacity = isDragging ? 0 : 1;\r\n\r\n    const [, drop] = useDrop({\r\n        accept: 'sortable',\r\n        hover(item: TIngredient, monitor) {\r\n            if (!ref.current) {\r\n                return;\r\n            }\r\n            const dragIndex = item.index;\r\n            const hoverIndex = index;\r\n            if (dragIndex === hoverIndex) {\r\n                return;\r\n            }\r\n            const hoverBoundingRect = ref.current?.getBoundingClientRect();\r\n            const hoverMiddleY = (hoverBoundingRect.bottom - hoverBoundingRect.top) / 2;\r\n            const clientOffset:any = monitor.getClientOffset();\r\n            const hoverClientY = clientOffset.y - hoverBoundingRect.top;\r\n            if (dragIndex < hoverIndex && hoverClientY < hoverMiddleY) {\r\n                return;\r\n            }\r\n            if (dragIndex > hoverIndex && hoverClientY > hoverMiddleY) {\r\n                return;\r\n            }\r\n            moveCardHandler(dragIndex, hoverIndex);\r\n            item.index = hoverIndex\r\n        },\r\n    });\r\n\r\n    drag(drop(ref))\r\n\r\n    return (<li id={_id} style={{opacity: opacity}} className={constructorStyle.item} ref={ref}>\r\n        <div className=\"mr-2\" style={{cursor: 'pointer'}}>\r\n            <DragIcon type={\"primary\"}/>\r\n        </div>\r\n        <ConstructorElement\r\n            text={name}\r\n            price={price}\r\n            thumbnail={image}\r\n            handleClose={handleRemoveIngredient}\r\n        />\r\n    </li>)\r\n}\r\n/*\r\nBurgerConstructorIngredient.propTypes = {\r\n    image: PropTypes.string.isRequired,\r\n    price: PropTypes.number.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    _id: PropTypes.string.isRequired,\r\n    uuid: PropTypes.string.isRequired,\r\n}*/\r\nexport default BurgerConstructorIngredient;","import React, { useMemo } from 'react';\r\nimport constructorStyle from './burger-constructor.module.css';\r\nimport { Button, ConstructorElement, CurrencyIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport Modal from \"../modal/modal\";\r\nimport OrderDetails from \"../order-details/order-details\";\r\nimport { useHistory, useLocation } from \"react-router-dom\";\r\nimport {\r\n    ADD_BUN_TO_CONSTRUCTOR,\r\n    ADD_INGREDIENT_TO_CONSTRUCTOR, CLEAR_CONSTRUCTOR\r\n} from \"../../services/actions/burger-constructor\";\r\nimport { postOrder } from \"../../services/actions/orders\";\r\n\r\nimport { useDrop } from \"react-dnd\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\n\r\nimport BurgerConstructorIngredient from \"../burger-constructor-item/burger-constructor-item\";\r\nimport { TConstructorIngredient } from '../../utils/types';\r\nimport { useDispatch, useSelector } from '../../services/types/types';\r\nimport { CLEAR_ORDER_NUMBER } from '../../services/actions/orders';\r\n\r\nfunction BurgerConstructor() {\r\n    const { ingredients, bun, orderNumber, isAuth } = useSelector(state => ({\r\n        ingredients: state.burgerConstructor.ingredients,\r\n        bun: state.burgerConstructor.bun,\r\n        orderNumber: state.orderData.orderNumber,\r\n        isAuth: state.userData.isAuth\r\n    }));\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const location = useLocation();\r\n\r\n    const [modalIsOpen, setModalIsOpen] = React.useState<boolean>(false)\r\n    const moveIngredient = (ingredient: TConstructorIngredient) => {\r\n        dispatch({\r\n            type: ingredient.type === 'bun' ? ADD_BUN_TO_CONSTRUCTOR : ADD_INGREDIENT_TO_CONSTRUCTOR,\r\n            item: { ...ingredient, uuid: uuidv4() }\r\n        })\r\n    }\r\n    const [{ isHover }, dropTarget] = useDrop({\r\n        accept: 'ingredients',\r\n        collect: monitor => ({\r\n            isHover: monitor.isOver()\r\n        }),\r\n        drop(item: TConstructorIngredient) {\r\n            moveIngredient(item);\r\n        }\r\n    });\r\n\r\n    const handleOpenModal = () => {\r\n        dispatch({\r\n            type: CLEAR_ORDER_NUMBER\r\n        })\r\n        if (!bun) {\r\n            return alert('Выберите булку');\r\n        }\r\n        if (!isAuth) {\r\n            return history.push('/login');\r\n        }\r\n        const idsArr = [...ingredients.map((item) => item._id), bun._id, bun._id];\r\n        dispatch(postOrder(idsArr));\r\n        history.push({\r\n            pathname: \"/sendOrder\",\r\n            state: {\r\n                background: location,\r\n            },\r\n        });\r\n        orderNumber && dispatch({\r\n            type: CLEAR_CONSTRUCTOR\r\n        })\r\n    }\r\n\r\n    /*\r\n  const handleClose = () => {\r\n      dispatch({\r\n          type: CLEAR_ORDER\r\n      })\r\n      dispatch({\r\n          type: CLEAR_CONSTRUCTOR\r\n      })\r\n      setModalIsOpen(false);\r\n  }*/\r\n\r\n    const totalPrice = useMemo(() => {\r\n        let price = ingredients.reduce((acc, item) => {\r\n            return item.price + acc;\r\n        }, 0);\r\n        if (bun) price += bun.price * 2;\r\n        return price;\r\n    }, [ingredients, bun])\r\n\r\n    return (\r\n        <>\r\n            <div ref={dropTarget} className={`${constructorStyle.constructor} mt-25`}>\r\n                <ul className={`${constructorStyle.list}`}>\r\n                    <li className={`${constructorStyle.item} ${isHover ? constructorStyle.item_isHovering : ''}`}>\r\n\r\n                        {bun ? (\r\n                            <ConstructorElement\r\n                                text={`${bun.name} (верх)`}\r\n                                price={bun.price}\r\n                                thumbnail={bun.image}\r\n                                type=\"top\"\r\n                                isLocked={true}\r\n                            />\r\n                        ) : (\r\n                            <div className={`${constructorStyle.nobun_top} text text_type_main-default`}>\r\n                                <p>Выберите булочку</p>\r\n                            </div>\r\n                        )}\r\n                    </li>\r\n                    <li className={`${constructorStyle.item} ${isHover ? constructorStyle.item_isHovering : ''}`}>\r\n                        <ul className={`${constructorStyle.list_scroll} custom-scroll`}\r\n                            style={{ display: 'flex', flexDirection: 'column', gap: '10px', alignItems: \"flex-end\" }}>\r\n                            {ingredients.map((item, idx) => {\r\n                                return <BurgerConstructorIngredient {...item} index={idx} key={item.uuid} />\r\n                            })}\r\n                        </ul>\r\n                    </li>\r\n                    <li className={`${constructorStyle.item} ${isHover ? constructorStyle.item_isHovering : ''}`}>\r\n                        {bun ? (\r\n                            <ConstructorElement\r\n                                type=\"bottom\"\r\n                                isLocked={true}\r\n                                text={`${bun.name} (низ)`}\r\n                                price={bun.price}\r\n                                thumbnail={bun.image}\r\n                            />\r\n                        ) : (\r\n                            <div className={`${constructorStyle.nobun_bottom} text text_type_main-default`}>\r\n                                <p>Выберите булочку</p>\r\n                            </div>\r\n                        )}\r\n                    </li>\r\n                </ul>\r\n                {(ingredients || bun) && (\r\n                    <div className={`${constructorStyle.order} mr-8`}>\r\n                        <div className={`${constructorStyle.total__price} mr-10`}>\r\n                            <span className=\"text text_type_digits-medium\">{totalPrice}</span>\r\n                            <CurrencyIcon type=\"primary\" />\r\n                        </div>\r\n                        <Button type=\"primary\" size=\"large\" onClick={handleOpenModal}>\r\n                            Оформить заказ\r\n                        </Button>\r\n                    </div>\r\n                )}\r\n            </div>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default BurgerConstructor;\r\n","import React from 'react';\r\nimport BurgerIngredients from \"../../components/burger-ingredients/burger-ingredients\";\r\nimport BurgerConstructor from \"../../components/burger-constructor/burger-constructor\";\r\n\r\n\r\nexport function Home() {\r\n    return (\r\n        <div className={`container pl-5 pr-5`}>\r\n            <div className={`main__container`}>\r\n                <BurgerIngredients/>\r\n                <BurgerConstructor/>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n","import { checkResponse, getUser, patchUser } from \"../../utils/api\";\r\nimport { apiURL } from \"../../utils/constants\";\r\nimport { Dispatch } from \"react\";\r\nimport { History } from 'history';\r\nimport { TForm, TFormLogin, TFormReset } from \"../../utils/types\";\r\nimport { AppDispatch, AppThunk } from \"../types/types\";\r\n\r\nexport const GET_USER_REQUEST = 'GET_USER_REQUEST';\r\nexport const GET_USER_SUCCESS = 'GET_USER_SUCCESS';\r\nexport const GET_USER_FAILED = 'GET_USER_FAILED';\r\nexport const GET_USER_INFO = 'GET_USER_INFO';\r\nexport const SET_IS_AUTH = 'SET_IS_AUTH';\r\nexport const DELETE_IS_AUTH = 'DELETE_IS_AUTH';\r\nexport const CHANGE_USER_INFO = 'CHANGE_USER_INFO';\r\nexport const SET_WAS_ON_FORGOT_PAGE = 'SET_WAS_ON_FORGOT_PAGE';\r\nexport const DELETE_WAS_ON_FORGOT_PAGE = 'DELETE_WAS_ON_FORGOT_PAGE';\r\n\r\nexport const sendForgotPassword = (emailValue: string, history: History): AppThunk => {\r\n    return function (dispatch: AppDispatch) {\r\n        dispatch({\r\n            type: GET_USER_REQUEST\r\n        })\r\n        fetch(`${apiURL}/password-reset`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({ email: emailValue })\r\n        })\r\n            .then(res => checkResponse(res))\r\n            .then(res => {\r\n                if (res && res.success) {\r\n                    history.push('/reset-password');\r\n                } else {\r\n                    dispatch({\r\n                        type: GET_USER_FAILED\r\n                    })\r\n                }\r\n            }\r\n            )\r\n            .catch(err => {\r\n                console.log(err)\r\n                alert(err.message)\r\n                dispatch({\r\n                    type: GET_USER_FAILED\r\n                })\r\n            })\r\n    }\r\n}\r\n\r\nexport const sendResetPassword = (form: TFormReset, history: History): AppThunk => {\r\n    return function (dispatch: AppDispatch) {\r\n        dispatch({\r\n            type: GET_USER_REQUEST\r\n        })\r\n        fetch(`${apiURL}/password-reset/reset`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                password: form.password,\r\n                token: form.token\r\n            })\r\n        })\r\n            .then(res => checkResponse(res))\r\n            .then(res => {\r\n                if (res && res.success) {\r\n                    history.push('/login');\r\n                } else {\r\n                    dispatch({\r\n                        type: GET_USER_FAILED\r\n                    })\r\n                }\r\n            }\r\n            )\r\n            .catch(err => {\r\n                console.log(err)\r\n                alert(err.message)\r\n                dispatch({\r\n                    type: GET_USER_FAILED\r\n                })\r\n            })\r\n    }\r\n}\r\n\r\nexport const sendRegister = (form: TForm, history: History): AppThunk => {\r\n    return function (dispatch: AppDispatch) {\r\n        dispatch({\r\n            type: GET_USER_REQUEST\r\n        })\r\n        fetch(`${apiURL}/auth/register`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                email: form.email,\r\n                password: form.password,\r\n                name: form.name\r\n            })\r\n        })\r\n            .then(res => checkResponse(res))\r\n            .then(res => {\r\n                if (res && res.success) {\r\n                    dispatch({\r\n                        type: GET_USER_SUCCESS,\r\n                        user: res.user\r\n                    });\r\n                    dispatch({\r\n                        type: SET_IS_AUTH,\r\n                        payload: {\r\n                            accessToken: res.accessToken,\r\n                            refreshToken: res.refreshToken\r\n                        }\r\n                    })\r\n                    history.push({ pathname: \"/\" });\r\n                } else {\r\n                    dispatch({\r\n                        type: GET_USER_FAILED\r\n                    })\r\n                }\r\n            }\r\n            )\r\n            .catch(err => {\r\n                console.log(err)\r\n                alert(err.message)\r\n                dispatch({\r\n                    type: GET_USER_FAILED\r\n                })\r\n            })\r\n    }\r\n}\r\n\r\nexport const sendLogin = (form: TFormLogin, history: History, from: { pathname: string }): AppThunk => {\r\n    return function (dispatch: AppDispatch) {\r\n        dispatch({\r\n            type: GET_USER_REQUEST\r\n        })\r\n        fetch(`${apiURL}/auth/login`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                email: form.email,\r\n                password: form.password,\r\n            })\r\n        })\r\n            .then(res => checkResponse(res))\r\n            .then(res => {\r\n                if (res && res.success) {\r\n                    dispatch({\r\n                        type: GET_USER_SUCCESS,\r\n                        user: res.user\r\n                    });\r\n                    dispatch({\r\n                        type: SET_IS_AUTH,\r\n                        payload: {\r\n                            accessToken: res.accessToken,\r\n                            refreshToken: res.refreshToken\r\n                        }\r\n                    })\r\n                    history.replace(from)\r\n                } else {\r\n                    dispatch({\r\n                        type: GET_USER_FAILED\r\n                    })\r\n                }\r\n            }\r\n            )\r\n            .catch(err => {\r\n                console.log(err)\r\n                alert(err.message)\r\n                dispatch({\r\n                    type: GET_USER_FAILED\r\n                })\r\n            })\r\n    }\r\n}\r\n\r\nexport const sendLogout = (history: History): AppThunk => {\r\n    return function (dispatch: AppDispatch) {\r\n        dispatch({\r\n            type: GET_USER_REQUEST\r\n        })\r\n        fetch(`${apiURL}/auth/logout`, {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                token: localStorage.getItem('refreshToken'),\r\n            })\r\n        })\r\n            .then(res => checkResponse(res))\r\n            .then(res => {\r\n                if (res && res.success) {\r\n                    dispatch({\r\n                        type: DELETE_IS_AUTH\r\n                    })\r\n                    history.replace({ pathname: '/login' })\r\n                } else {\r\n                    dispatch({\r\n                        type: GET_USER_FAILED\r\n                    })\r\n                }\r\n            }\r\n            )\r\n            .catch(err => {\r\n                console.log(err)\r\n                alert(err.message)\r\n                dispatch({\r\n                    type: GET_USER_FAILED\r\n                })\r\n            })\r\n    }\r\n}\r\n\r\nexport const getUserInfo = (): AppThunk => {\r\n    return async function (dispatch: AppDispatch) {\r\n        dispatch({\r\n            type: GET_USER_REQUEST\r\n        })\r\n        await getUser()\r\n            .then(res => {\r\n                if (res && res.success) {\r\n                    dispatch({\r\n                        type: GET_USER_INFO,\r\n                        user: res.user\r\n                    })\r\n                } else {\r\n                    dispatch({\r\n                        type: GET_USER_FAILED\r\n                    })\r\n                }\r\n            }\r\n            )\r\n            .catch(err => {\r\n                console.log(err)\r\n                alert(err.message)\r\n                dispatch({\r\n                    type: GET_USER_FAILED\r\n                })\r\n            })\r\n    }\r\n}\r\n\r\nexport const sendUserInfo = (form: TForm): AppThunk => {\r\n    return async function (dispatch: AppDispatch) {\r\n        dispatch({\r\n            type: GET_USER_REQUEST\r\n        })\r\n        await patchUser(form)\r\n            .then(res => {\r\n                if (res && res.success) {\r\n                    dispatch({\r\n                        type: CHANGE_USER_INFO,\r\n                        payload: {\r\n                            user: res.user\r\n                        }\r\n                    })\r\n                } else {\r\n                    dispatch({\r\n                        type: GET_USER_FAILED\r\n                    })\r\n                }\r\n            }\r\n            )\r\n            .catch(err => {\r\n                console.log(err)\r\n                alert(err.message)\r\n                dispatch({\r\n                    type: GET_USER_FAILED\r\n                })\r\n            })\r\n    }\r\n}","import React, {useState, ChangeEvent, FormEvent} from \"react\";\r\nimport styles from \"./login.module.css\";\r\nimport {Button, Input, PasswordInput} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport {Link, Redirect, useHistory, useLocation} from \"react-router-dom\";\r\nimport {sendLogin} from \"../../services/actions/user\";\r\nimport { useDispatch, useSelector } from \"../../services/types/types\";\r\n\r\nexport type TFormData = {\r\n    email: string;\r\n    password: string;\r\n}\r\n\r\ntype TLocationState = {\r\n    from: Location\r\n}\r\n\r\nexport function Login() {\r\n    const history = useHistory();\r\n    const location = useLocation<TLocationState>();\r\n    const dispatch = useDispatch();\r\n    const {isAuth} = useSelector(state => state.userData);\r\n    const [form, setForm] = useState<TFormData>({\r\n        email: \"\",\r\n        password: \"\"\r\n    })\r\n    let {from} = location.state || {from: {pathname: '/'}}\r\n    const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setForm({\r\n            ...form,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n    const handleSubmit = (e: FormEvent) => {\r\n        e.preventDefault();\r\n        dispatch(sendLogin({\r\n            email: form.email,\r\n            password: form.password\r\n        }, history, from))\r\n    }\r\n    if (isAuth) {\r\n        return (<Redirect to={{pathname: '/'}} />)\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className={styles.login__container}>\r\n                <h3 className=\"text text_type_main-medium mb-6\">Вход</h3>\r\n                <form className=\"form\" onSubmit={handleSubmit}>\r\n                    <div className=\"form__item mb-6\">\r\n                        <Input\r\n                            placeholder=\"E-mail\"\r\n                            error={false}\r\n                            errorText={\"Ошибка какая то\"}\r\n                            name={\"email\"}\r\n                            size={\"default\"}\r\n                            type={\"email\"}\r\n                            onChange={handleChange}\r\n                            value={form.email}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form__item mb-6\">\r\n                        <PasswordInput\r\n                            size={\"default\"}\r\n                            name={\"password\"}\r\n                            onChange={handleChange}\r\n                            value={form.password}\r\n                        />\r\n                    </div>\r\n                    <div className={`${styles.form__button} mb-20`}>\r\n                        <Button type={\"primary\"} size=\"medium\">Войти</Button>\r\n                    </div>\r\n                </form>\r\n                <div className={styles.login__links}>\r\n                    <p className=\"text text_type_main-default text_color_inactive mb-4\">Вы - новый\r\n                        пользователь? <Link\r\n                            to={\"/register\"} className=\"text text_color_accent\">Зарегистрироваться</Link></p>\r\n                    <p className=\"text text_type_main-default text_color_inactive\">Забыли пароль? <Link\r\n                        to={\"/forgot-password\"} className=\"text text_color_accent\">Восстановить пароль</Link>\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useState, ChangeEvent, FormEvent} from \"react\";\r\nimport styles from \"./register.module.css\";\r\nimport {Button, Input, PasswordInput} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport {Link, Redirect, useHistory} from \"react-router-dom\";\r\nimport {sendRegister} from \"../../services/actions/user\";\r\nimport { useDispatch, useSelector } from \"../../services/types/types\";\r\nimport { TForm } from \"../../utils/types\";\r\n\r\nexport function Register() {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const {isAuth} = useSelector(state => state.userData);\r\n\r\n    const [form, setForm] = useState<TForm>({\r\n        email: \"\",\r\n        password: \"\",\r\n        name: \"\"\r\n    })\r\n    \r\n    const handleChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setForm({\r\n            ...form,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const handleSubmit = (e: FormEvent) => {\r\n        e.preventDefault();\r\n        dispatch(sendRegister(form, history))\r\n    }\r\n\r\n    if (isAuth) {\r\n        return (<Redirect to={{pathname: '/'}}/>)\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className={styles.login__container}>\r\n                <h3 className=\"text text_type_main-medium mb-6\">Регистрация</h3>\r\n                <form className=\"form\" action=\"\" onSubmit={handleSubmit}>\r\n                    <div className=\"form__item mb-6\">\r\n                        <Input\r\n                            placeholder=\"Имя\"\r\n                            error={false}\r\n                            name={\"name\"}\r\n                            onChange={handleChange}\r\n                            errorText={'Ошибка какая то'}\r\n                            size={\"default\"}\r\n                            type={\"text\"}\r\n                            value={form.name}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form__item mb-6\">\r\n                        <Input\r\n                            placeholder=\"E-mail\"\r\n                            error={false}\r\n                            errorText={\"Ошибка какая то\"}\r\n                            name={\"email\"}\r\n                            size={\"default\"}\r\n                            type={\"email\"}\r\n                            onChange={handleChange}\r\n                            value={form.email}\r\n                        />\r\n                    </div>\r\n                    <div className=\"form__item mb-6\">\r\n                        <PasswordInput\r\n                            size={\"default\"}\r\n                            name={\"password\"}\r\n                            onChange={handleChange}\r\n                            value={form.password}\r\n                        />\r\n                    </div>\r\n                    <div className={`${styles.form__button} mb-20`}>\r\n                        <Button type={\"primary\"} size=\"medium\">Зарегестрироваться</Button>\r\n                    </div>\r\n                </form>\r\n                <div className={styles.login__links}>\r\n                    <p className=\"text text_type_main-default text_color_inactive mb-4\">\r\n                        Уже зарегистрированы? <Link to={`/login`} className=\"text text_color_accent\">Войти</Link>\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import {useRef} from \"react\";\r\n\r\nexport const useCustomInput = () => {\r\n    const ref = useRef<HTMLInputElement>(null);\r\n    const handleBlur = () => {\r\n        let input = ref.current;\r\n        if (input) {\r\n            input.setAttribute('disabled', 'true');\r\n            input.classList.add('input__textfield-disabled');\r\n        }\r\n    }\r\n    const handleIconClick = () => {\r\n        let input = ref.current;\r\n        if (input) {\r\n            input.removeAttribute('disabled');\r\n            input.classList.remove('input__textfield-disabled')\r\n            input.focus();\r\n        }\r\n    }\r\n    return {\r\n        ref,\r\n        handleBlur,\r\n        handleIconClick\r\n    }\r\n}","import React, { useEffect, useState, ChangeEvent, SyntheticEvent, FormEvent } from \"react\";\r\nimport styles from \"./profile-form.module.css\";\r\nimport { Button, EmailInput, Input } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { useCustomInput } from \"../../hooks/useInput\";\r\nimport { getUserInfo, sendUserInfo } from \"../../services/actions/user\";\r\nimport { TForm } from \"../../utils/types\";\r\nimport { useDispatch, useSelector } from \"../../services/types/types\";\r\n\r\nexport function ProfileForm() {\r\n    const { user } = useSelector(state => state.userData);\r\n    const dispatch = useDispatch();\r\n\r\n    const [form, setForm] = useState<TForm>({\r\n        name: \"\",\r\n        email: \"\",\r\n        password: \"\"\r\n    })\r\n\r\n    const [isChangeInput, setIsChangeInput] = useState<boolean>(false);\r\n\r\n    useEffect(() => {\r\n        dispatch(getUserInfo());\r\n    }, [dispatch])\r\n\r\n    useEffect(() => {\r\n        setForm({\r\n            ...form,\r\n            email: user.email,\r\n            name: user.name\r\n        })\r\n    }, [user])\r\n\r\n    const nameCustomInput = useCustomInput();\r\n    const passCustomInput = useCustomInput();\r\n\r\n    const handleOnChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setForm({\r\n            ...form,\r\n            [e.target.name]: e.target.value\r\n        })\r\n        setIsChangeInput(true);\r\n    }\r\n\r\n    const handleSubmit = (e: FormEvent) => {\r\n        e.preventDefault();\r\n        dispatch(sendUserInfo(form));\r\n        setIsChangeInput(false);\r\n    }\r\n\r\n    const handleCancel = (e: SyntheticEvent) => {\r\n        e.preventDefault();\r\n        setForm({\r\n            email: user.email,\r\n            name: user.name,\r\n            password: \"\"\r\n        })\r\n        setIsChangeInput(false);\r\n    }\r\n\r\n    return (\r\n        <form className={`${styles.form} mt-30`} onSubmit={handleSubmit}>\r\n            <div className=\"form__item mb-6\">\r\n                <Input\r\n                    placeholder=\"Имя\"\r\n                    error={false}\r\n                    name={\"name\"}\r\n                    onChange={handleOnChange}\r\n                    errorText={'Ошибка какая то'}\r\n                    size={\"default\"}\r\n                    type={\"text\"}\r\n                    icon={\"EditIcon\"}\r\n                    onBlur={passCustomInput.handleBlur}\r\n                    onIconClick={passCustomInput.handleIconClick}\r\n                    disabled={true}\r\n                    ref={passCustomInput.ref}\r\n                    value={form.name}\r\n                />\r\n            </div>\r\n            <div className=\"form__item mb-6\">\r\n                <EmailInput onChange={handleOnChange} value={form.email} name={'email'} />\r\n            </div>\r\n            <div className=\"form__item mb-6\">\r\n                <Input\r\n                    placeholder=\"Пароль\"\r\n                    error={false}\r\n                    name={\"password\"}\r\n                    onChange={handleOnChange}\r\n                    errorText={'Ошибка какая то'}\r\n                    size={\"default\"}\r\n                    type={\"password\"}\r\n                    icon={\"EditIcon\"}\r\n                    onBlur={nameCustomInput.handleBlur}\r\n                    onIconClick={nameCustomInput.handleIconClick}\r\n                    disabled={true}\r\n                    ref={nameCustomInput.ref}\r\n                    value={form.password}\r\n                />\r\n            </div>\r\n            {isChangeInput && (\r\n                <div className={`${styles.form__buttons} mb-20`}>\r\n                    <Button type={\"secondary\"} size=\"medium\" onClick={handleCancel}>Отмена</Button>\r\n                    <Button type={\"primary\"} size=\"medium\">Изменить</Button>\r\n                </div>\r\n            )}\r\n        </form>\r\n    )\r\n}","import React from 'react';\r\nimport styles from \"./profile-menu.module.css\";\r\nimport {NavLink, useHistory} from \"react-router-dom\";\r\nimport {sendLogout} from \"../../services/actions/user\";\r\nimport { useDispatch } from '../../services/types/types';\r\n\r\nexport function ProfileMenu() {\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const handleClick = () => {\r\n        dispatch(sendLogout(history));\r\n    }\r\n    return (\r\n        <div className={`${styles.profile__cont} mt-30`}>\r\n            <ul className={`${styles.profile__menu} mr-15`}>\r\n                <li className={`${styles.profile__menuItem} text text_type_main-medium text_color_inactive`}>\r\n                    <NavLink to={`/profile`} exact={true} activeClassName={\"text_color_primary\"}>Профиль</NavLink>\r\n                </li>\r\n                <li className={`${styles.profile__menuItem} text text_type_main-medium text_color_inactive`}>\r\n                    <NavLink to={`/profile/orders`} activeClassName={\"text_color_primary\"}>История заказов</NavLink>\r\n                </li>\r\n                <li onClick={handleClick} className={`${styles.profile__menuItem} text text_type_main-medium text_color_inactive`}>\r\n                    <NavLink exact={true} to={`/exit`} activeClassName={\"text_color_primary\"}>Выход</NavLink>\r\n                </li>\r\n            </ul>\r\n            <p className={`${styles.profile__menuSubtitle} mt-20 text text_type_main-default text_color_inactive`}>В этом разделе вы можете изменить свои персональные данные</p>\r\n        </div>\r\n\r\n    )\r\n}","import React, { FC, SyntheticEvent, useMemo } from 'react';\r\nimport feedStyles from \"../../pages/feed/feed.module.css\";\r\nimport constructorStyle from \"../burger-constructor/burger-constructor.module.css\";\r\nimport { CurrencyIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport { Link, useLocation, useRouteMatch } from \"react-router-dom\";\r\nimport { getDate } from \"../../utils/funcs\";\r\nimport { TFeedItem } from '../../services/types/user';\r\nimport { TLocationState, useSelector } from '../../services/types/types';\r\n\r\n\r\ntype TFeedItemProps = {\r\n  data: TFeedItem;\r\n}\r\n\r\nexport const FeedItem: FC<TFeedItemProps> = (props) => {\r\n  const location = useLocation<TLocationState>();\r\n  const { url } = useRouteMatch();\r\n\r\n  const { ingredients } = useSelector((state) => state.burgerIngredients);\r\n  const _id: number = props.data.number;\r\n\r\n  const uniqueOrderIngredients = Array.from(new Set(props.data.ingredients));\r\n\r\n  const orderIngredients = uniqueOrderIngredients.map((ingredient) => {\r\n    return ingredients.find((item) => item._id === ingredient);\r\n  });\r\n\r\n  const price = orderIngredients.reduce((acc, curr) => {\r\n    if (curr) {\r\n      if (curr.type === 'bun') {\r\n        acc += curr.price * 2;\r\n      } else {\r\n        acc += curr.price;\r\n      }\r\n\r\n    }\r\n    return acc;\r\n  }, 0)\r\n\r\n  return (\r\n    <Link to={{ pathname: `${url}/${_id}`, state: { background: location } }}\r\n      className={`${feedStyles.feed} mt-4`}>\r\n      <div className={`${feedStyles.feed__top}`}>\r\n        <p className={`text text_type_digits-default`}>#{props.data.number}</p>\r\n        <p className={`text text_type_main-default text_color_inactive`}>{getDate(props.data.createdAt)}</p>\r\n      </div>\r\n      <div className=\"feed__center\">\r\n        <h3 className={`text text_type_digits-default mt-6 mb-6`}>{props.data.name}</h3>\r\n      </div>\r\n      <div className={`${feedStyles.feed__bottom}`}>\r\n        <div className={`${feedStyles.ingredients}`} style={{ position: \"relative\" }}>\r\n          {orderIngredients.slice(0, 5).map((item, index) => (<img src={item?.image_mobile} alt=\"\" className={`${feedStyles.ingredient}`} key={index} style={{ zIndex: 5 - index }} />))}\r\n          {orderIngredients.length > 5 && (<span className={`${feedStyles.more} text text_type_main-default`}>+{orderIngredients.length - 5}</span>)}\r\n        </div>\r\n        <div className={`${constructorStyle.total__price} mr-10`}>\r\n          <span className=\"text text_type_digits-medium\">{price}</span>\r\n          <CurrencyIcon type=\"primary\" />\r\n        </div>\r\n      </div>\r\n    </Link>\r\n  )\r\n}","import React, { SyntheticEvent, useEffect } from 'react';\r\nimport profileOrdersStyle from \"./profile-orders.module.css\";\r\nimport { FeedItem } from \"../feed-item/feed-item\";\r\nimport Modal from \"../modal/modal\";\r\nimport { FeedDetails } from \"../feed-details/feed-details\";\r\nimport { useDispatch, useSelector } from \"../../services/types/types\";\r\n\r\nimport { orderWsConnectionClosed, orderWsConnectionStart } from \"../../services/actions/orders\";\r\nimport { wsURL } from \"../../utils/constants\";\r\nimport { getCookie } from \"../../utils/funcs\";\r\nimport { RootState } from '../../services/types/types';\r\nimport { TFeedItem } from '../../services/types/user';\r\n\r\nexport const ProfileOrders = () => {\r\n  const { orders, wsConnected } = useSelector((state: RootState) => state.orderData);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const token = getCookie('token')?.replace('Bearer ', '');\r\n    dispatch(orderWsConnectionStart(`${wsURL}?token=${token}`));\r\n    return () => {\r\n      dispatch(orderWsConnectionClosed());\r\n    }\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      {orders && (\r\n        <div className={`${profileOrdersStyle.profile__orders} mt-8 custom-scroll`}>\r\n          {wsConnected && orders.length === 0 && (<h1>У вас нет заказов.</h1>)}\r\n          {wsConnected && orders.map((item, index) => <FeedItem data={item} key={index} />)}\r\n        </div>\r\n      )}\r\n    </>\r\n\r\n  )\r\n}","import React from \"react\";\r\nimport styles from \"./profile.module.css\";\r\nimport {ProfileForm} from \"../../components/profile-form/profile-form\";\r\nimport {ProfileMenu} from \"../../components/profile-menu/profile-menu\";\r\nimport {Route, Switch, useHistory, useLocation, useRouteMatch} from \"react-router-dom\";\r\nimport {ProfileOrders} from \"../../components/profile-orders/profile-orders\";\r\nimport { TLocationState } from \"../../services/types/types\";\r\n\r\n\r\nexport function Profile() {\r\n  const { path } = useRouteMatch();\r\n  //Remove this\r\n  const history = useHistory();\r\n  const location = useLocation<TLocationState>();\r\n  let background = history.action === 'PUSH' && location.state && location.state.background;\r\n\r\n    return (\r\n      <>\r\n        <div className=\"container\">\r\n          <div className={`${styles.profile__container} pr-5 pl-5`}>\r\n            <ProfileMenu/>\r\n            <div className={`${styles.profile__content}`}>\r\n              <Switch location={background || location}>\r\n                <Route path={`${path}/`} exact={true}>\r\n                  <ProfileForm />\r\n                </Route>\r\n                <Route path={`${path}/orders`} exact={true}>\r\n                  <ProfileOrders />\r\n                </Route>\r\n              </Switch>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </>\r\n    )\r\n}","import React, {useState, ChangeEvent, FormEvent} from \"react\";\r\nimport resetStyles from './reset-password.module.css';\r\nimport {Button, Input} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport {Link, Redirect, useHistory} from \"react-router-dom\";\r\nimport {DELETE_WAS_ON_FORGOT_PAGE, sendResetPassword} from \"../../services/actions/user\";\r\nimport { TFormReset } from \"../../utils/types\";\r\nimport { useDispatch, useSelector } from \"../../services/types/types\";\r\n\r\nexport function ResetPassword() {\r\n    const history = useHistory();\r\n\r\n    const {wasOnForgotPass, isAuth} = useSelector(state => state.userData);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const [form, setForm] = useState<TFormReset>({\r\n        password: \"\",\r\n        token: \"\"\r\n    })\r\n\r\n    const onChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setForm({\r\n            ...form,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    const onSendForm = (e: FormEvent) => {\r\n        e.preventDefault();\r\n        dispatch(sendResetPassword(form, history));\r\n        dispatch({type: DELETE_WAS_ON_FORGOT_PAGE})\r\n    }\r\n\r\n    if (isAuth) {\r\n        return (<Redirect to={{pathname: '/'}}/>)\r\n    }\r\n\r\n    if (!wasOnForgotPass) {\r\n        return (<Redirect to={'/forgot-password'}/>)\r\n    }\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className={resetStyles.login__container}>\r\n                <h3 className=\"text text_type_main-medium mb-6\">Восстановление пароля</h3>\r\n                <form className=\"form\" action=\"\" onSubmit={onSendForm}>\r\n                    <div className=\"form__item mb-6\">\r\n                        <Input\r\n                            type={\"password\"}\r\n                            icon={\"ShowIcon\"}\r\n                            size={\"default\"}\r\n                            placeholder=\"Введите новый пароль\"\r\n                            error={false}\r\n                            errorText={\"Ошибка какая то\"}\r\n                            name={\"password\"}\r\n                            onChange={onChange}\r\n                            value={form.password}\r\n                        />\r\n                    </div>  \r\n                    <div className=\"form__item mb-6\">\r\n                        <Input\r\n                            type={\"text\"}\r\n                            size={\"default\"}\r\n                            placeholder=\"Введите код из письма\"\r\n                            error={false}\r\n                            errorText={\"Ошибка какая то\"}\r\n                            name={\"token\"}\r\n                            onChange={onChange}\r\n                            value={form.token}\r\n                        />\r\n                    </div>\r\n                    <div className={`${resetStyles.form__button} mb-20`}>\r\n                        <Button type={\"primary\"} size=\"medium\">Войти</Button>\r\n                    </div>\r\n                </form>\r\n                <div className={resetStyles.login__links}>\r\n                    <p className=\"text text_type_main-default text_color_inactive mb-4\">\r\n                        Уже зарегистрированы? <Link to={`/login`} className=\"text text_color_accent\">Войти</Link>\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React, {useState, ChangeEvent, FormEvent} from \"react\";\r\nimport styles from \"./forgot-password.module.css\";\r\nimport {Button, Input} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport {Link, Redirect, useHistory} from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"../../services/types/types\";\r\nimport {sendForgotPassword, SET_WAS_ON_FORGOT_PAGE} from \"../../services/actions/user\";\r\n\r\nexport function ForgotPassword() {\r\n    const history = useHistory();\r\n    const dispatch = useDispatch();\r\n    const {isAuth} = useSelector(state => state.userData);\r\n\r\n    const [email, setEmail] = useState<string>(\"\");\r\n    const onChange = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setEmail(e.target.value);\r\n    }\r\n    const onSendForm = (e: FormEvent) => {\r\n        e.preventDefault();\r\n        dispatch({\r\n            type: SET_WAS_ON_FORGOT_PAGE\r\n        })\r\n        dispatch(sendForgotPassword(email, history));\r\n    }\r\n    if (isAuth) {\r\n        return (<Redirect to={{pathname: '/'}}/>)\r\n    }\r\n    return (\r\n        <div className=\"container\">\r\n            <div className={styles.login__container}>\r\n                <h3 className=\"text text_type_main-medium mb-6\">Восстановление пароля</h3>\r\n                <form className=\"form\" action=\"\" onSubmit={onSendForm}>\r\n                    <div className=\"form__item mb-6\">\r\n                        <Input\r\n                            placeholder=\"Укажите E-mail\"\r\n                            error={false}\r\n                            errorText={\"Ошибка какая то\"}\r\n                            name={\"email\"}\r\n                            size={\"default\"}\r\n                            type={\"email\"}\r\n                            value={email}\r\n                            onChange={onChange}\r\n                        />\r\n                    </div>\r\n                    <div className={`${styles.form__button} mb-20`}>\r\n                        \r\n                        <Button type={\"primary\"} size=\"medium\">Восстановить</Button>\r\n                    </div>\r\n                </form>\r\n                <div className={styles.login__links}>\r\n                    <p className=\"text text_type_main-default text_color_inactive mb-4\">\r\n                        Вспомнили пароль? <Link to={`/login`} className=\"text text_color_accent\">Войти</Link>\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\n\r\nexport function NotFound() {\r\n    \r\n  return (\r\n    <p>Не нашли ничегошеньки. Потом приделаю картинку</p>    \r\n  )\r\n}","import { Redirect, Route } from 'react-router-dom';\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport { useSelector } from '../services/types/types';\r\n\r\ntype TProtectedRouteProps = {\r\n    exact?: boolean;\r\n    path: string;\r\n}\r\n\r\nexport const ProtectedRoute: React.FC<TProtectedRouteProps> = ({ children, exact, path }) => {\r\n   const {isAuth} = useSelector(state => state.userData);\r\n    return (\r\n        <Route\r\n            exact={exact}\r\n            path={path}\r\n            render={({ location }) =>\r\n                isAuth ? (\r\n                    children\r\n                ) : (\r\n                    <Redirect\r\n                        to={{\r\n                            pathname: '/login',\r\n                            state: { from: location }\r\n                        }}\r\n                    />\r\n                )\r\n            }\r\n        />\r\n    );\r\n}\r\n/*\r\nProtectedRoute.propTypes = {\r\n    children: PropTypes.node.isRequired,\r\n    exact: PropTypes.bool,\r\n    path: PropTypes.string.isRequired\r\n}*/\r\n","import { apiURL } from \"../../utils/constants\";\r\nimport { AppDispatch, AppThunk } from \"../types/types\";\r\n\r\nexport const GET_INGREDIENTS_REQUEST = 'GET_ITEMS_REQUEST';\r\nexport const GET_INGREDIENTS_SUCCESS = 'GET_ITEMS_SUCCESS';\r\nexport const GET_INGREDIENTS_FAILED = 'GET_ITEMS_FAILED';\r\nexport const SET_INGREDIENT_TO_MODAL = 'SET_INGREDIENT_TO_MODAL';\r\nexport const REMOVE_INGREDIENT_FROM_MODAL = 'REMOVE_INGREDIENT_FROM_MODAL';\r\n\r\nexport const getIngredients = (): AppThunk => {\r\n    return function (dispatch: AppDispatch) {\r\n        dispatch({\r\n            type: GET_INGREDIENTS_REQUEST\r\n        })\r\n        fetch(apiURL + '/ingredients')\r\n            .then(res => {\r\n                if (res.ok) {\r\n                    return res.json();\r\n                }\r\n                throw new Error(`Cannot get data from API. Status code: ${res.status}`);\r\n            })\r\n            .then(data => {\r\n                if (data && data.success) {\r\n                    dispatch({\r\n                        type: GET_INGREDIENTS_SUCCESS,\r\n                        ingredients: data.data,\r\n                    })\r\n                } else {\r\n                    dispatch({ type: GET_INGREDIENTS_FAILED })\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n                dispatch({ type: GET_INGREDIENTS_FAILED })\r\n            })\r\n    }\r\n}","import React, { useEffect, useMemo } from 'react';\r\nimport { CurrencyIcon } from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport feedDetailsStyle from './feed-details.module.css';\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport { RootState, useDispatch, useSelector } from \"../../services/types/types\";\r\nimport { getOrder } from \"../../services/actions/orders\";\r\nimport { getDate } from \"../../utils/funcs\";\r\nimport { TFeedItem } from '../../services/types/user';\r\n\r\nexport const FeedDetails = () => {\r\n  const { id }: { id: string } = useParams();\r\n  console.log(id)\r\n  const orderNumber = id;\r\n\r\n  const dispatch = useDispatch();\r\n  const { orders } = useSelector((state: RootState) => state.orderData);\r\n  const { ingredients } = useSelector((state: RootState) => state.burgerIngredients);\r\n\r\n  useEffect(() => {\r\n    if (orders.length === 0) {\r\n      dispatch(getOrder(orderNumber));\r\n    }\r\n  }, [dispatch])\r\n\r\n\r\n  const order = orders && orders.find((item) => item.number === Number(orderNumber));\r\n\r\n  const orderIngredients = useMemo(() => {\r\n    return Array.from(new Set(order?.ingredients)).map((ingredient) => {\r\n      return ingredients.find((item) => item._id === ingredient);\r\n    });;\r\n  }, [order, ingredients])\r\n\r\n  const price = useMemo(() => {\r\n    return orderIngredients.reduce((acc, item): number => {\r\n      if (item) {\r\n        if (item.type === 'bun') {\r\n          acc += item.price * 2;\r\n        } else {\r\n          acc += item.price;\r\n        }\r\n      }\r\n      return acc;\r\n    }, 0)\r\n  }, [orderIngredients]);\r\n\r\n  if (!orderNumber) return (<h1>Произошла ошибка</h1>)\r\n\r\n  return (\r\n    <>\r\n      {orderIngredients.length === 0 && (<h1>Загрузка</h1>)}\r\n      {order && orderIngredients.length > 0 && (\r\n        <div className={`${feedDetailsStyle.feed}`}>\r\n          <p className={`text text_type_digits-default ${feedDetailsStyle.title}`}>#{order?.number}</p>\r\n          <p className={`text text_type_main-medium  mt-10`}>{order?.name}</p>\r\n          <p className={`text text_type_main-default text_color_success mt-2`}>{order?.status === 'done' ? 'Выполнен' : 'В работе'}</p>\r\n          <p className={`text text_type_main-medium mt-15 mb-6`}>Состав:</p>\r\n          <div className={`${feedDetailsStyle.ingredients} custom-scroll`}>\r\n            {orderIngredients && orderIngredients.map((item, index) => {\r\n              return (\r\n                <div key={index} className={`${feedDetailsStyle.ingredient}`}>\r\n                  <div className={`${feedDetailsStyle.ingredient__info}`}>\r\n                    <img src={item?.image_mobile} alt=\"\"\r\n                      className={`${feedDetailsStyle.ingredient__image}`} />\r\n                    <p className=\"text text_type_main-default ml-4\">{item?.name}</p>\r\n                  </div>\r\n                  <div className={`${feedDetailsStyle.ingredient__price}`}>\r\n                    <span className={`text text_type_digits-default mr-2`}>{item?.type === 'bun' ? 2 : 1} x {item?.price}</span>\r\n                    <CurrencyIcon type=\"primary\" />\r\n                  </div>\r\n                </div>\r\n              )\r\n            })}\r\n\r\n          </div>\r\n          <div className={`${feedDetailsStyle.feed__footer}`}>\r\n            <p className={`text text_type_main-default ml-4 text_color_inactive`}>{getDate(order?.createdAt)}</p>\r\n            <div className={`total__${feedDetailsStyle.ingredient__price}`}>\r\n              <span className={`text text_type_digits-default mr-2`}>{price}</span>\r\n              <CurrencyIcon type=\"primary\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n\r\n\r\n  )\r\n}","import React from 'react';\r\nimport modalOverlayStyles from './modal-overlay.module.css';\r\nimport PropTypes from \"prop-types\";\r\n\r\ntype TModalOverlayProps = {\r\n    onClose: () => void\r\n}\r\n\r\nconst ModalOverlay: React.FC<TModalOverlayProps> = (props) => {\r\n        return (\r\n            <div className={modalOverlayStyles.overlay} onClick={props.onClose}></div>\r\n        )\r\n}\r\n\r\n/*\r\nModalOverlay.propsTypes = {\r\n    onClose: PropTypes.func.isRequired\r\n}*/\r\n\r\nexport default  ModalOverlay; ","import React, { SyntheticEvent } from 'react';\r\nimport ReactDOM from \"react-dom\";\r\nimport modalStyles from './modal.module.css';\r\nimport {CloseIcon} from \"@ya.praktikum/react-developer-burger-ui-components\";\r\nimport ModalOverlay from \"../modal-overlay/modal-overlay\";\r\nimport PropTypes from \"prop-types\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\ntype TModalProps = {\r\n  title?: string,\r\n  onClose: () => void\r\n}\r\n\r\nconst Modal: React.FC<TModalProps> = (props) => {\r\n  const history = useHistory();\r\n  const back = (e: Event | SyntheticEvent) => {\r\n      e.stopPropagation();\r\n      history.goBack();\r\n  };\r\n  const handleCatchEsc = (e: KeyboardEvent) => {\r\n      if (e.code === 'Escape') {\r\n          back(e)\r\n      }\r\n  }\r\n  React.useEffect(() => {\r\n    document.addEventListener('keyup', handleCatchEsc);\r\n    return () => {\r\n      document.removeEventListener('keyup', handleCatchEsc);\r\n    }\r\n  })\r\n\r\n  return ReactDOM.createPortal(\r\n    <>\r\n      <ModalOverlay onClose={props.onClose} />\r\n      <div className={`${modalStyles.modal} pt-10 pr-10 pl-10 pb-15`}>\r\n        <div className={modalStyles.header}>\r\n          <h3 className={`${modalStyles.title} text text_type_main-large`}>{props.title}</h3>\r\n          <div className={modalStyles.close_pointer} onClick={props.onClose}><CloseIcon type={\"primary\"} /></div>\r\n        </div>\r\n         {props.children}\r\n      </div>\r\n    </>,\r\n    document.getElementById('modal-root')! //  херь какая-то непонятная. Взял с доки typescript\r\n    )\r\n}\r\n\r\n/*\r\nModal.propTypes = {\r\n    onClose: PropTypes.func.isRequired,\r\n    children: PropTypes.node.isRequired,\r\n    title: PropTypes.string\r\n}*/\r\n\r\nexport default  Modal;","export default __webpack_public_path__ + \"static/media/graphics.95470a5b.png\";","import React, { useEffect } from 'react';\r\nimport orderDetailsStyles from './order-details.module.css';\r\nimport checkImage from '../../images/graphics.png';\r\nimport PropTypes from \"prop-types\";\r\nimport { useDispatch, useSelector } from '../../services/types/types';\r\nimport { CLEAR_CONSTRUCTOR } from \"../../services/actions/burger-constructor\";\r\n\r\n/*\r\ntype TOrderDetailsProps = {\r\n    id: string\r\n}\r\n*/\r\n\r\nconst OrderDetails: React.FC = () => {\r\n    const { orderNumber } = useSelector((state) => state.orderData)\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if (orderNumber) {\r\n            dispatch({\r\n                type: CLEAR_CONSTRUCTOR\r\n            })\r\n        }\r\n    }, [orderNumber, dispatch])\r\n\r\n    return (\r\n        <>\r\n            {!orderNumber && (<h1>Идет загрузка...</h1>)}\r\n            <div className={`${orderDetailsStyles.order} pb-15`}>\r\n                <h3 className={`text text_primary_ligth text_type_digits-large`}>\r\n                    {orderNumber}\r\n                </h3>\r\n                <p className='text text_type_main-medium mt-8'>идентификатор заказа</p>\r\n                <div className={`${orderDetailsStyles.status} mt-15 mb-15`}>\r\n                    <img src={checkImage} alt=\"done\" />\r\n                </div>\r\n                <p className=\"text text_type_main-default\">Ваш заказ начали готовить</p>\r\n                <p className=\"text text_type_main-default text_color_inactive mt-2\">Дождитесь готовности на орбитальной станции</p>\r\n            </div>\r\n        </>\r\n    )\r\n\r\n}\r\n/*\r\nOrderDetails.propTypes = {\r\n    id: PropTypes.number.isRequired\r\n}*/\r\n\r\nexport default OrderDetails;","import React, { SyntheticEvent, useEffect } from 'react';\r\nimport feedStyles from './feed.module.css';\r\nimport Modal from \"../../components/modal/modal\";\r\nimport { FeedDetails } from \"../../components/feed-details/feed-details\";\r\nimport { FeedItem } from \"../../components/feed-item/feed-item\";\r\nimport { useDispatch, useSelector } from \"../../services/types/types\";\r\n\r\nimport { orderWsConnectionClosed, orderWsConnectionStart } from \"../../services/actions/orders\";\r\nimport { wsURL } from \"../../utils/constants\";\r\nimport { TFeedItem } from '../../services/types/user';\r\nimport { RootState } from '../../services/types/types';\r\n\r\nexport const Feed = () => {\r\n  const { orders, total, totalToday, wsConnected } = useSelector((state: RootState) => state.orderData);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(orderWsConnectionStart(`${wsURL}/all`));\r\n    return () => {\r\n      dispatch(orderWsConnectionClosed());\r\n    }\r\n  }, [dispatch])\r\n\r\n  return (\r\n    <>\r\n      {/*{!wsConnected && <h1 style={{textAlign: \"center\"}}>Произошла ошибка</h1>}*/}\r\n      {wsConnected && orders && orders.length === 0 && (<h1 style={{ textAlign: \"center\" }}>Идет загрузка</h1>)}\r\n      {(total && totalToday && orders.length !== 0) ? (\r\n        <div className={`container pl-5 pr-5`}>\r\n          <div className={`main__container`}>\r\n            <div className={feedStyles.feeds__container}>\r\n              <h1 className=\"text text_type_main-large mt-10 text_colo\">Лента заказов</h1>\r\n              <div className={`${feedStyles.feeds} mt-5 custom-scroll`}>\r\n                {orders.map((item, index) => <FeedItem data={item} key={index} />)}\r\n              </div>\r\n            </div>\r\n            <div className={`${feedStyles.feed__info}`}>\r\n              <div className={feedStyles.feed__board}>\r\n                <div className={feedStyles.feed__boardLeft}>\r\n                  <p className={`text text_type_main-medium mb-6`}>Готовы</p>\r\n                  <ul className={feedStyles.feed__completed}>\r\n                    {orders\r\n                      .filter((item) => item.status === 'done')\r\n                      .slice(0, 10)\r\n                      .map((item, index) => (<li className={`text text_type_digits-default text_color_success mb-2`} key={index}>{item.number}</li>))\r\n                    }\r\n                  </ul>\r\n                </div>\r\n                <div className={feedStyles.feed__boardRight}>\r\n                  <p className={`text text_type_main-medium mb-6`}>В работе:</p>\r\n                  <ul className={feedStyles.feed__inProgress}>\r\n                    {orders\r\n                      .filter((item) => item.status === 'pending')\r\n                      .slice(0, 10)\r\n                      .map((item, index) => (<li className={`text text_type_digits-default text_color_success mb-2`} key={index}>{item.number}</li>))\r\n                    }\r\n                  </ul>\r\n                </div>\r\n\r\n              </div>\r\n              <div className=\"feed__allCount mt-15\">\r\n                <p className={`text text_type_main-default`}>Выполнено за все время:</p>\r\n                <p className={`text text_type_digits-large text_color_primary ${feedStyles.feed__mainTitle}`}>{total}</p>\r\n              </div>\r\n              <div className=\"feed__todayCount mt-15\">\r\n                <p className={`text text_type_main-default`}>Выполнено за сегодня:</p>\r\n                <p className={`text text_type_digits-large  text_color_primary ${feedStyles.feed__mainTitle}`}>{totalToday}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n    </>\r\n  )\r\n}","import {useEffect} from 'react';\r\nimport {Switch, Route, useLocation, useHistory, } from 'react-router-dom';\r\nimport AppHeader from '../app-header/app-header';\r\nimport IngredientDetails from \"../ingredient-details/ingredient-details\";\r\nimport {Home, Login, Register, ForgotPassword, ResetPassword, Profile, NotFound} from \"../../pages\";\r\nimport {ProtectedRoute} from \"../../hocs/protected-route\";\r\nimport { TLocationState } from '../../utils/types';\r\nimport { useDispatch } from '../../services/types/types';\r\nimport {getIngredients} from \"../../services/actions/burger-ingredients\";\r\nimport {FeedDetails} from \"../feed-details/feed-details\";\r\nimport Modal from \"../modal/modal\";\r\nimport OrderDetails from \"../order-details/order-details\";\r\nimport { Feed } from '../../pages/feed/feed';\r\n\r\n\r\nfunction App() {\r\n  const history = useHistory();\r\n  const location = useLocation<TLocationState>();\r\n  let background = history.action === 'PUSH' && location.state && location.state.background;\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(getIngredients());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <AppHeader />\r\n      <main>\r\n        <Switch location={background || location}>\r\n          <Route path=\"/\" exact={true}>\r\n            <Home/>\r\n          </Route>\r\n          <Route path=\"/login\" exact={true}>\r\n            <Login/>\r\n          </Route>\r\n            <Route path={\"/register\"} exact={true}>\r\n          <Register/>\r\n            </Route>\r\n          <Route path={\"/forgot-password\"} exact={true}>\r\n            <ForgotPassword/>\r\n          </Route>\r\n            <Route path={\"/reset-password\"} exact={true}>\r\n          <ResetPassword/>\r\n            </Route>\r\n          <Route path={\"/ingredients/:id\"} exact={true}>\r\n            <IngredientDetails />\r\n          </Route>\r\n          <ProtectedRoute path={\"/profile\"} exact={true}>\r\n            <Profile/>\r\n          </ProtectedRoute>\r\n          <ProtectedRoute path={\"/profile/orders/:id\"} exact={true}>\r\n            <FeedDetails/>\r\n          </ProtectedRoute>\r\n          <ProtectedRoute path={\"/profile\"}>\r\n            <Profile/>\r\n          </ProtectedRoute>\r\n          <Route path=\"/feed\" exact={true}>\r\n            <Feed/>\r\n          </Route>\r\n          <Route path={`/feed/:id`} exact={true}>\r\n            <FeedDetails/>\r\n          </Route>\r\n          <Route>\r\n            <NotFound />\r\n          </Route>\r\n        </Switch>\r\n        {background &&\r\n        (<>\r\n          <Route path={'/ingredients/:id'}\r\n                 children={<Modal onClose={() => history.goBack()}><IngredientDetails/></Modal>}/>\r\n          <Route path={'/sendOrder'}\r\n                 children={<Modal onClose={() => history.goBack()}><OrderDetails/></Modal>}/>\r\n          <Route path={'/feed/:id'}\r\n                 children={<Modal onClose={() => history.goBack()}><FeedDetails/></Modal>} />\r\n          <Route path={'/profile/orders/:id'}\r\n                 children={<Modal onClose={() => history.goBack()}><FeedDetails/></Modal>} />\r\n        </>)\r\n        }\r\n\r\n\r\n\r\n      </main>  \r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;","import { Middleware, MiddlewareAPI } from \"redux\";\r\nimport { orderWsActions } from \"../store\";\r\n\r\ntype wsActionsType = typeof orderWsActions;\r\n\r\nexport const ordersSocketMiddleWare = (wsUrl: string, wsActions: wsActionsType): Middleware => {\r\n  return (store: MiddlewareAPI) => {\r\n    let socket: WebSocket | null = null;\r\n\r\n    return next => action => {\r\n      const { dispatch } = store;\r\n      const { type, payload } = action;\r\n      const { wsInit, onOpen, onClose, onError, onMessage } = wsActions;\r\n      if (wsInit.match(type)) {\r\n        socket = new WebSocket(payload);\r\n      }\r\n      if (socket) {\r\n        socket.onopen = event => {\r\n          dispatch({ type: onOpen });\r\n        };\r\n\r\n        socket.onerror = event => {\r\n          dispatch({ type: onError });\r\n        };\r\n\r\n        socket.onmessage = event => {\r\n          const { data } = event;\r\n          const parsedData = JSON.parse(data);\r\n          const { success, ...restParsedData } = parsedData;\r\n\r\n          dispatch({ type: onMessage, payload: restParsedData });\r\n        };\r\n\r\n        socket.onclose = event => {\r\n          dispatch({ type: onClose });\r\n        };\r\n      }\r\n\r\n      next(action);\r\n    };\r\n  };\r\n};","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { TIngredient } from \"../types/types\";\r\nimport {\r\n    GET_INGREDIENTS_REQUEST,\r\n    GET_INGREDIENTS_SUCCESS,\r\n    GET_INGREDIENTS_FAILED,\r\n    SET_INGREDIENT_TO_MODAL, REMOVE_INGREDIENT_FROM_MODAL\r\n} from \"../actions/burger-ingredients\";\r\nimport { TBurgerIngredientsActions } from \"../types/burger-ingerdients\";\r\n\r\ntype TIngredientInitialState = {\r\n    ingredients: TIngredient[];\r\n    ingredientsRequest: boolean;\r\n    ingredientsError: boolean;\r\n    ingredientDetails: TIngredient | {}\r\n}\r\n\r\nexport const initialState: TIngredientInitialState = {\r\n    ingredients: [],\r\n    ingredientsRequest: false,\r\n    ingredientsError: false,\r\n    ingredientDetails: {}\r\n};\r\n\r\nexport const burgerIngredientsReducer = (state = initialState, action: TBurgerIngredientsActions): TIngredientInitialState => {\r\n    switch (action.type) {\r\n        case GET_INGREDIENTS_REQUEST: {\r\n            return {\r\n                ...state,\r\n                ingredientsRequest: true\r\n            };\r\n        }\r\n        case GET_INGREDIENTS_SUCCESS: {\r\n            return { ...state, ingredientsError: false, ingredients: action.ingredients, ingredientsRequest: false };\r\n        }\r\n        case GET_INGREDIENTS_FAILED: {\r\n            return { ...state, ingredientsError: true, ingredientsRequest: false };\r\n        }\r\n        case SET_INGREDIENT_TO_MODAL: {\r\n            return {\r\n                ...state,\r\n                ingredientDetails: action.item\r\n            }\r\n        }\r\n        case REMOVE_INGREDIENT_FROM_MODAL: {\r\n            return {\r\n                ...state,\r\n                ingredientDetails: {}\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};","import { TConstructorIngredient } from \"../types/types\";\r\nimport {\r\n    ADD_INGREDIENT_TO_CONSTRUCTOR,\r\n    ADD_BUN_TO_CONSTRUCTOR,\r\n    REMOVE_INGREDIENT_FROM_CONSTRUCTOR, MOVE_INGREDIENT_IN_CONSTRUCTOR, CLEAR_CONSTRUCTOR,\r\n} from \"../actions/burger-constructor\";\r\nimport { TConstructorActions } from \"../types/burger-constructor\";\r\n\r\ntype TInitialState = {\r\n    ingredients: TConstructorIngredient[];\r\n    bun: TConstructorIngredient | null;\r\n    totalPrice: number;\r\n}\r\n\r\nexport const initialState: TInitialState = {\r\n    ingredients: [],\r\n    bun: null,\r\n\r\n    totalPrice: 0\r\n}\r\n\r\nexport const constructorReducer = (state = initialState, action: TConstructorActions): TInitialState => {\r\n    switch (action.type) {\r\n        case ADD_INGREDIENT_TO_CONSTRUCTOR:\r\n            return {\r\n                ...state,\r\n                ingredients: [...state.ingredients, action.item],\r\n            }\r\n        case ADD_BUN_TO_CONSTRUCTOR:\r\n            return {\r\n                ...state,\r\n                bun: action.item,\r\n            }\r\n        case REMOVE_INGREDIENT_FROM_CONSTRUCTOR:\r\n            return {\r\n                ...state,\r\n                ingredients: [\r\n                    ...state.ingredients.filter(({ uuid }) => uuid !== action.id)\r\n                ],\r\n            }\r\n        case MOVE_INGREDIENT_IN_CONSTRUCTOR:\r\n            let ingredients = [...state.ingredients];\r\n            const dragCard = ingredients[action.dragIndex];\r\n            ingredients.splice(action.dragIndex, 1);\r\n            ingredients.splice(action.hoverIndex, 0, dragCard)\r\n            return {\r\n                ...state,\r\n                ingredients: ingredients\r\n            }\r\n        case CLEAR_CONSTRUCTOR:\r\n            return {\r\n                ...state,\r\n                ingredients: [],\r\n                bun: null\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {\r\n    GET_USER_FAILED,\r\n    GET_USER_INFO,\r\n    GET_USER_REQUEST,\r\n    GET_USER_SUCCESS,\r\n    SET_IS_AUTH,\r\n    DELETE_IS_AUTH,\r\n    SET_WAS_ON_FORGOT_PAGE, DELETE_WAS_ON_FORGOT_PAGE, CHANGE_USER_INFO\r\n} from \"../actions/user\";\r\nimport { setCookie, deleteCookie, getCookie } from \"../../utils/funcs\";\r\nimport { TUserActions } from \"../types/user\";\r\n\r\ntype TUsersInitialState = {\r\n    authRequest: boolean;\r\n    authFailed: boolean;\r\n    user: {\r\n        name: string;\r\n        email: string;\r\n    };\r\n    isAuth: boolean;\r\n    wasOnForgotPass: boolean;\r\n}\r\n\r\nexport const initialState: TUsersInitialState = {\r\n    authRequest: false,\r\n    authFailed: false,\r\n    user: {\r\n        name: \"\",\r\n        email: \"\"\r\n    },\r\n    isAuth: Boolean(getCookie('token')),\r\n    wasOnForgotPass: false\r\n}\r\n\r\nexport const usersReducer = (state = initialState, action: TUserActions): TUsersInitialState => {\r\n    switch (action.type) {\r\n        case GET_USER_FAILED:\r\n            return {\r\n                ...state,\r\n                authFailed: true\r\n            }\r\n        case GET_USER_REQUEST:\r\n            return {\r\n                ...state,\r\n                authRequest: true\r\n            }\r\n        case GET_USER_SUCCESS:\r\n            return {\r\n                ...state,\r\n                user: action.user,\r\n                authRequest: false,\r\n                authFailed: false,\r\n                isAuth: true\r\n            }\r\n        case GET_USER_INFO:\r\n            return {\r\n                ...state,\r\n                user: action.user\r\n            }\r\n        case SET_IS_AUTH:\r\n            setCookie('token', action.payload.accessToken);\r\n            localStorage.setItem('refreshToken', action.payload.refreshToken);\r\n            return {\r\n                ...state,\r\n                isAuth: true,\r\n            }\r\n        case DELETE_IS_AUTH:\r\n            deleteCookie('token');\r\n            localStorage.removeItem('refreshToken');\r\n            return {\r\n                ...state,\r\n                isAuth: false\r\n            }\r\n        case SET_WAS_ON_FORGOT_PAGE:\r\n            return {\r\n                ...state,\r\n                wasOnForgotPass: true\r\n            }\r\n        case DELETE_WAS_ON_FORGOT_PAGE:\r\n            return {\r\n                ...state,\r\n                wasOnForgotPass: false\r\n            }\r\n        case CHANGE_USER_INFO:\r\n            return {\r\n                ...state,\r\n                user: action.payload.user\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {\r\n  CLEAR_ORDER,\r\n  CLEAR_ORDER_NUMBER,\r\n  GET_ORDER_FAILED,\r\n  GET_ORDER_NUMBER_FAILED,\r\n  GET_ORDER_NUMBER_REQUEST,\r\n  GET_ORDER_NUMBER_SUCCESS,\r\n  GET_ORDER_REQUEST,\r\n  GET_ORDER_SUCCESS,\r\n  ORDER_WS_CONNECTION_CLOSED,\r\n  ORDER_WS_CONNECTION_ERROR,\r\n  ORDER_WS_CONNECTION_SUCCESS,\r\n  ORDER_WS_GET_MESSAGE\r\n} from \"../actions/orders\";\r\n\r\nimport { TOrdersActions } from \"../types/orders\";\r\nimport { TFeedItem } from \"../types/user\";\r\n\r\ntype TInitialState = {\r\n  wsConnected: boolean,\r\n  wsError: boolean,\r\n  orders: TFeedItem[],\r\n  total: number,\r\n  totalToday: number,\r\n  order: TFeedItem | null,\r\n  orderRequest: boolean,\r\n  orderFailed: boolean,\r\n  orderNumber: string | null,\r\n  orderNumberRequest: boolean,\r\n  orderNumberFailed: boolean\r\n}\r\n\r\nexport const initialState: TInitialState = {\r\n  wsConnected: false,\r\n  wsError: false,\r\n  orders: [],\r\n  order: null,\r\n  orderRequest: false,\r\n  orderFailed: false,\r\n  total: 0,\r\n  totalToday: 0,\r\n  orderNumber: null,\r\n  orderNumberRequest: false,\r\n  orderNumberFailed: false,\r\n\r\n}\r\n\r\nexport const ordersReducer = (state = initialState, action: TOrdersActions): TInitialState => {\r\n  switch (action.type) {\r\n    case ORDER_WS_CONNECTION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        wsConnected: true\r\n      }\r\n    case ORDER_WS_CONNECTION_ERROR:\r\n      return {\r\n        ...state,\r\n        wsConnected: false,\r\n        wsError: true\r\n      }\r\n    case ORDER_WS_CONNECTION_CLOSED:\r\n      return {\r\n        ...state,\r\n        wsConnected: false,\r\n        orders: []\r\n      }\r\n    case ORDER_WS_GET_MESSAGE:\r\n      return {\r\n        ...state,\r\n        orders: action.payload.orders,\r\n        total: action.payload.total,\r\n        totalToday: action.payload.totalToday\r\n      }\r\n    case GET_ORDER_FAILED:\r\n      return {\r\n        ...state,\r\n        orderFailed: true\r\n      }\r\n    case GET_ORDER_REQUEST:\r\n      return {\r\n        ...state,\r\n        orderRequest: true\r\n      }\r\n    case GET_ORDER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        orders: action.orders\r\n      }\r\n    case GET_ORDER_NUMBER_REQUEST:\r\n      return {\r\n        ...state,\r\n        orderNumberRequest: true,\r\n      }\r\n    case GET_ORDER_NUMBER_SUCCESS:\r\n      console.log(action.payload)\r\n      return {\r\n        ...state,\r\n        orderNumber: action.payload\r\n      }\r\n    case GET_ORDER_NUMBER_FAILED:\r\n      return {\r\n        ...state,\r\n        orderNumberFailed: true\r\n      }\r\n    case CLEAR_ORDER_NUMBER:\r\n      return {\r\n        ...state,\r\n        orderNumber: null\r\n      }\r\n    case CLEAR_ORDER:\r\n      return {\r\n        ...state,\r\n        order: null\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}","import { combineReducers } from 'redux';\r\nimport {burgerIngredientsReducer} from \"./burger-ingredients\";\r\nimport {constructorReducer} from \"./burger-constructor\";\r\nimport {usersReducer} from \"./user\";\r\nimport {ordersReducer} from \"./orders\";\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    burgerIngredients: burgerIngredientsReducer,\r\n    burgerConstructor: constructorReducer,\r\n    userData: usersReducer,\r\n    orderData: ordersReducer\r\n});","import { applyMiddleware, compose, createStore } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { rootReducer } from \"./reducers\";\r\nimport { wsURL } from \"../utils/constants\";\r\nimport {\r\n    ORDER_WS_CONNECTION_CLOSED,\r\n    ORDER_WS_CONNECTION_ERROR,\r\n    ORDER_WS_CONNECTION_START,\r\n    ORDER_WS_CONNECTION_SUCCESS,\r\n    ORDER_WS_GET_MESSAGE\r\n} from \"./actions/orders\";\r\nimport { ordersSocketMiddleWare } from \"./middlewares/ordersSocketMiddleWare\";\r\nimport { configureStore } from \"@reduxjs/toolkit\";\r\n\r\nexport const orderWsActions = {\r\n    wsInit: ORDER_WS_CONNECTION_START,\r\n    onOpen: ORDER_WS_CONNECTION_SUCCESS,\r\n    onClose: ORDER_WS_CONNECTION_CLOSED,\r\n    onError: ORDER_WS_CONNECTION_ERROR,\r\n    onMessage: ORDER_WS_GET_MESSAGE\r\n};\r\n\r\ndeclare global {\r\n    interface Window {\r\n        __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n    }\r\n}\r\n\r\nconst orderMiddleWare = ordersSocketMiddleWare(wsURL, orderWsActions)\r\n\r\nconst store = configureStore({\r\n    reducer: rootReducer,\r\n    middleware: (getDefaultMiddleware) => {\r\n        return getDefaultMiddleware().concat(orderMiddleWare)\r\n    }\r\n})\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/app/app';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {Provider} from \"react-redux\";\r\nimport {DndProvider} from \"react-dnd\";\r\nimport {HTML5Backend} from \"react-dnd-html5-backend\";\r\nimport store from './services/store';\r\nimport {BrowserRouter as Router} from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <DndProvider backend={HTML5Backend}>\r\n      <Provider store={store}>\r\n        <Router>\r\n          <App/>\r\n        </Router>  \r\n      </Provider>\r\n    </DndProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"body\":\"feed-details_body__2vcK4\",\"composition\":\"feed-details_composition__wmYj_\",\"feed\":\"feed-details_feed__191LH\",\"title\":\"feed-details_title__2KLEu\",\"ingredients\":\"feed-details_ingredients__334_8\",\"ingredient\":\"feed-details_ingredient__3ZXJZ\",\"ingredient__info\":\"feed-details_ingredient__info__1Gcsy\",\"ingredient__image\":\"feed-details_ingredient__image__3DOvS\",\"ingredient__price\":\"feed-details_ingredient__price__1E8mx\",\"feed__footer\":\"feed-details_feed__footer__2sLxy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"flex\":\"ingredient-details_flex__3PI9R\",\"container\":\"ingredient-details_container__1bWHY ingredient-details_flex__3PI9R\",\"item\":\"ingredient-details_item__2COGk ingredient-details_flex__3PI9R\",\"title\":\"ingredient-details_title__26n71\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"constr\":\"burger-ingredients_constr__2sFZg\",\"tabs\":\"burger-ingredients_tabs__SkJR8\",\"tab\":\"burger-ingredients_tab__2iFGd\",\"tab__link\":\"burger-ingredients_tab__link__qf-Sx\",\"active\":\"burger-ingredients_active__JBaNI\",\"products\":\"burger-ingredients_products__2H3tA\",\"products__cont\":\"burger-ingredients_products__cont__34drP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile__menu\":\"profile-menu_profile__menu__13sjF\",\"profile__menuItem\":\"profile-menu_profile__menuItem__3POU8\",\"profile__cont\":\"profile-menu_profile__cont__3NHA9\",\"profile__menuSubtitle\":\"profile-menu_profile__menuSubtitle__3l-21\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"product\":\"ingredient_product__2F9Wl\",\"image\":\"ingredient_image__3hSGQ\",\"price\":\"ingredient_price__oFN7g\",\"name\":\"ingredient_name__yRwAz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"modal_modal__3Rdvy\",\"header\":\"modal_header__303v8\",\"title\":\"modal_title__1BaYS\",\"close_pointer\":\"modal_close_pointer__8ZJa2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login__container\":\"login_login__container__6CvWc\",\"form__button\":\"login_form__button__1ZpFT\",\"login__links\":\"login_login__links__lwqqK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login__container\":\"register_login__container__GFjq8\",\"form__button\":\"register_form__button__1E203\",\"login__links\":\"register_login__links__3P5vS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login__container\":\"reset-password_login__container__12eW_\",\"form__button\":\"reset-password_form__button__2TOBP\",\"login__links\":\"reset-password_login__links__1Qu5H\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login__container\":\"forgot-password_login__container__2EMDg\",\"form__button\":\"forgot-password_form__button__mgFng\",\"login__links\":\"forgot-password_login__links__12wap\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile__container\":\"profile_profile__container__Q9YLR\",\"profile__content\":\"profile_profile__content__1BdwT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"profile-form_form__1yvI5\",\"input\":\"profile-form_input__38Yv7\",\"form__buttons\":\"profile-form_form__buttons__z_qQY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"order\":\"order-details_order__3zDFj\",\"status\":\"order-details_status__2qFHY\"};"],"sourceRoot":""}